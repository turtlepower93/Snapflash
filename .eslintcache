[{"/Users/richardwilliams/code/snapflash/src/index.js":"1","/Users/richardwilliams/code/snapflash/src/pages/App/App.jsx":"2","/Users/richardwilliams/code/snapflash/src/utilities/users-service.js":"3","/Users/richardwilliams/code/snapflash/src/utilities/decks-api.js":"4","/Users/richardwilliams/code/snapflash/src/pages/CardsFlipViewPage/CardsFlipViewPage.jsx":"5","/Users/richardwilliams/code/snapflash/src/pages/CardsListViewPage/CardsListViewPage.jsx":"6","/Users/richardwilliams/code/snapflash/src/pages/AuthPage/AuthPage.jsx":"7","/Users/richardwilliams/code/snapflash/src/pages/UpdateDeckPage/UpdateDeckPage.jsx":"8","/Users/richardwilliams/code/snapflash/src/pages/NewDeckPage/NewDeckPage.jsx":"9","/Users/richardwilliams/code/snapflash/src/pages/DecksListPage/DecksListPage.jsx":"10","/Users/richardwilliams/code/snapflash/src/components/NavBar/NavBar.jsx":"11","/Users/richardwilliams/code/snapflash/src/utilities/send-request.js":"12","/Users/richardwilliams/code/snapflash/src/utilities/users-api.js":"13","/Users/richardwilliams/code/snapflash/src/components/CardListContainer/CardListContainer.jsx":"14","/Users/richardwilliams/code/snapflash/src/components/FlipViewContainer/FlipViewContainer.jsx":"15","/Users/richardwilliams/code/snapflash/src/components/Card/Card.jsx":"16","/Users/richardwilliams/code/snapflash/src/components/LoginForm/LoginForm.jsx":"17","/Users/richardwilliams/code/snapflash/src/components/SignUpForm/SignUpForm.jsx":"18","/Users/richardwilliams/code/snapflash/src/components/AddCard/AddCard.jsx":"19","/Users/richardwilliams/code/snapflash/src/components/UpdateCard/UpdateCard.jsx":"20","/Users/richardwilliams/code/snapflash/src/components/DecksListContainer/DecksListContainer.jsx":"21","/Users/richardwilliams/code/snapflash/src/components/CardFlip/CardFlip.jsx":"22","/Users/richardwilliams/code/snapflash/src/components/Deck/Deck.jsx":"23","/Users/richardwilliams/code/snapflash/src/pages/SearchDecksPage/SearchDecksPage.jsx":"24","/Users/richardwilliams/code/snapflash/src/utilities/search-api.js":"25","/Users/richardwilliams/code/snapflash/src/components/SearchDecksContainer/SearchDecksContainer.jsx":"26","/Users/richardwilliams/code/snapflash/src/components/Footer/Footer.jsx":"27"},{"size":305,"mtime":1611683909381,"results":"28","hashOfConfig":"29"},{"size":3410,"mtime":1612161829583,"results":"30","hashOfConfig":"29"},{"size":1246,"mtime":1611882435580,"results":"31","hashOfConfig":"29"},{"size":756,"mtime":1611974214328,"results":"32","hashOfConfig":"29"},{"size":558,"mtime":1611974214324,"results":"33","hashOfConfig":"29"},{"size":578,"mtime":1611974214325,"results":"34","hashOfConfig":"29"},{"size":544,"mtime":1611683909382,"results":"35","hashOfConfig":"29"},{"size":6990,"mtime":1612161829585,"results":"36","hashOfConfig":"29"},{"size":6645,"mtime":1612161829584,"results":"37","hashOfConfig":"29"},{"size":690,"mtime":1612161829584,"results":"38","hashOfConfig":"29"},{"size":1689,"mtime":1612161829580,"results":"39","hashOfConfig":"29"},{"size":861,"mtime":1611701921143,"results":"40","hashOfConfig":"29"},{"size":1184,"mtime":1611683909382,"results":"41","hashOfConfig":"29"},{"size":287,"mtime":1611885847619,"results":"42","hashOfConfig":"29"},{"size":1290,"mtime":1611890796946,"results":"43","hashOfConfig":"29"},{"size":255,"mtime":1611890505158,"results":"44","hashOfConfig":"29"},{"size":1394,"mtime":1611683909380,"results":"45","hashOfConfig":"29"},{"size":1714,"mtime":1611794205397,"results":"46","hashOfConfig":"29"},{"size":1524,"mtime":1612161829577,"results":"47","hashOfConfig":"29"},{"size":1638,"mtime":1612161829582,"results":"48","hashOfConfig":"29"},{"size":676,"mtime":1612161829579,"results":"49","hashOfConfig":"29"},{"size":716,"mtime":1611893112887,"results":"50","hashOfConfig":"29"},{"size":2074,"mtime":1612161829578,"results":"51","hashOfConfig":"29"},{"size":669,"mtime":1612161829585,"results":"52","hashOfConfig":"29"},{"size":188,"mtime":1611974214328,"results":"53","hashOfConfig":"29"},{"size":660,"mtime":1612161829581,"results":"54","hashOfConfig":"29"},{"size":601,"mtime":1612161829580,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1qhzhc0",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"58"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"58"},"/Users/richardwilliams/code/snapflash/src/index.js",[],["127","128"],"/Users/richardwilliams/code/snapflash/src/pages/App/App.jsx",["129"],"/Users/richardwilliams/code/snapflash/src/utilities/users-service.js",[],"/Users/richardwilliams/code/snapflash/src/utilities/decks-api.js",[],"/Users/richardwilliams/code/snapflash/src/pages/CardsFlipViewPage/CardsFlipViewPage.jsx",["130","131"],"import { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Card from '../../components/Card/Card';\nimport FlipViewContainer from '../../components/FlipViewContainer/FlipViewContainer';\n\nexport default function CardsFlipViewPage() {\n  \n\n  const {state : {deck}} = useLocation()\n\n  console.log(deck)\n\n  return (\n    <>\n      <h1>Flippy Time</h1>\n      <h2>Created By: {deck.user.name}</h2>\n      <h2>Name Of Deck: {deck.name}</h2>\n      <h2>Description: {deck.description}</h2>\n      <FlipViewContainer deck={deck}/>\n    </>\n  )\n}","/Users/richardwilliams/code/snapflash/src/pages/CardsListViewPage/CardsListViewPage.jsx",["132"],"import { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport CardListContainer from '../../components/CardListContainer/CardListContainer';\n\nexport default function CardsListViewPage() {\n  \n  const location = useLocation() \n\n  const {state : {deck}} = useLocation()\n\n  // console.log(location)\n  // console.log(deck)\n  // const thisDeck = useLocation().state.deck\n  // console.log(deck)\n  return (\n    <>\n    <h1>View Card List Page</h1>\n    {deck.name}: \n    {deck.description}\n    <CardListContainer location={location} deck={deck} />\n    </>\n  )\n}","/Users/richardwilliams/code/snapflash/src/pages/AuthPage/AuthPage.jsx",[],"/Users/richardwilliams/code/snapflash/src/pages/UpdateDeckPage/UpdateDeckPage.jsx",["133","134"],"import { useEffect, useState, useRef } from 'react';\nimport { useLocation, useHistory} from 'react-router-dom'\nimport Card from '../../components/AddCard/AddCard'\nimport UpdateCard from '../../components/UpdateCard/UpdateCard'\n\nexport default function UpdateDeckPage({ handleUpdateDeck }) {\n  \n  let history = useHistory();\n\n  const [updateDeck,setUpdateDeck] = useState({\n    name:'',\n    description:''\n  });\n  const [newCard,setNewCard] = useState({\n    word:'',\n    definition:''\n  });\n  const [cards,setCards] = useState([]);\n  const {state : {deck}} = useLocation()\n  const wordInput = useRef();\n  const definitionInput = useRef();\n  const formRef = useRef();\n  const [invalidForm, setInvalidForm] = useState(false);\n  const [addingNewCard, setAddingNewCard] = useState(true)\n  \n  console.log('HELLO I AM ON THE UPDATE PAGE', deck)\n\n  //Checks to see that all fields have a value, otherwise the form is invalid.\n  useEffect(() => {\n    // console.log('Am I Running?')\n    let hits = 0;\n    let length = 0;\n    // console.log(formRef)\n    formRef.current.childNodes.forEach((n) => {\n      // console.log(n)\n      if(n.localName === 'textarea'){\n        length += 1\n        if(n.value) {\n          hits += 1;\n        }\n      }\n      if(n.localName === 'div') {\n        n.childNodes.forEach((c) => {\n          if(c.localName === 'textarea'){\n            length += 1\n            if(c.value) {\n              hits += 1;\n            }\n        }\n        })\n      }\n    })\n    // console.log(\"I say the form is: \", invalidForm, ' hits=',hits, ' length=', length )\n    if (hits === length) {\n      setInvalidForm(false)\n    } else {\n      setInvalidForm(true)\n    }\n  }, [cards, updateDeck, newCard]);\n\n  // This unpacks the deck to set initial values\n  useEffect(() => {\n    setUpdateDeck({\n      name:deck.name,\n      description:deck.description\n    })\n    const cards = [...deck.cards]\n    let dupeCards = [...cards]\n    let lastCard = dupeCards.splice(-1,1)\n    wordInput.current.value = lastCard[0].word\n    definitionInput.current.value = lastCard[0].definition\n    setCards(dupeCards);\n    setNewCard(lastCard[0])\n  },[])\n\n  //handles the input name of the new deck\n  function handleDeckInputChange(evt) {\n    // console.log({[evt.target.name]:evt.target.value})\n    setUpdateDeck({\n      ...deck,\n      [evt.target.name]:evt.target.value\n    })\n  }\n\n  //handles the input change of the newest card\n  function handleCardInputChange(evt) {\n    // console.log({[evt.target.name]:evt.target.value})\n    setNewCard({\n      ...newCard,\n      [evt.target.name]:evt.target.value\n    })\n  }\n\n  //handles the input change of the rest of the cards\n  function handleCardsInputChange(evt,idx) {\n    const dupeCards = [...cards]\n    dupeCards[idx][evt.target.name] = evt.target.value;\n    setCards(dupeCards);\n\n  }\n\n  //adds new card to the deck of cards, resets new card\n  async function handleAddCard(newCardData) {\n    await setAddingNewCard(true)\n    const cardsArr = [...cards];\n    cardsArr.push(newCardData);\n    setCards(cardsArr);\n    setNewCard({\n      word:'',\n      definition:''\n    });\n    wordInput.current.focus();\n    wordInput.current.value = '';\n    definitionInput.current.value = '';\n    setInvalidForm(true)\n  }\n\n  function handleCardsDelete(key) {\n    const dupeCards = [...cards]\n    dupeCards.splice(key,1);\n    setCards(dupeCards);\n}\n\nfunction handleDeleteCard() {\n  const dupeCards = [...cards];\n  let lastCard = dupeCards.splice(-1,1);\n  wordInput.current.value = lastCard[0].word\n  definitionInput.current.value = lastCard[0].definition\n  setNewCard(lastCard[0]);\n  setCards(dupeCards);\n}\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const cardsArr = [...cards];\n    if(newCard.definition === '' && newCard.name === '') {\n      // console.log('state is empty')\n    }\n    cardsArr.push(newCard);\n    handleUpdateDeck(deck,cardsArr,deck._id);\n  }\n\n  function checkIfTab(e) {\n    if(e.which === 9) {\n    e.preventDefault()\n    handleAddCard(newCard)\n    }\n  }\n\n  return (\n    <>\n      <h1>Make a New Deck Here</h1>\n      <form autocomplete=\"off\" ref={formRef} onSubmit={handleSubmit}>\n        <label>Name:</label>\n        <textarea name=\"name\"  type=\"text\" defaultValue={updateDeck.name} onChange={handleDeckInputChange}/>\n        <label>Description:</label>\n        <textarea name=\"description\" type=\"text\" defaultValue={updateDeck.description} onChange={handleDeckInputChange}/>\n        {cards.map((c,idx) => \n          <UpdateCard \n            card={c} \n            handleCardsInputChange={handleCardsInputChange} \n            cardKey={idx}\n            handleCardsDelete={handleCardsDelete}\n            />)}\n        { addingNewCard ?\n          <>\n            {/* {console.log('after I Hit add card')} */}\n            <label>Word:</label>\n            <textarea name=\"word\" type=\"text\" ref={wordInput} onChange={handleCardInputChange}/>\n            <label>Definition:</label>\n            <textarea name=\"definition\" onKeyDown={checkIfTab} type=\"text\" ref={definitionInput} onChange={handleCardInputChange}/>\n            {cards.length===0 ?\n            <>\n            </> \n            :\n            <p onClick={handleDeleteCard}>DELETE</p>\n            }\n            </>\n            :\n            <>\n            </>\n        }\n        <button disabled={invalidForm}>submit</button>\n      </form>\n      {/* <button onClick={handleDeckBeGone}>Delete Deck!</button> */}\n      <button onClick={() => handleAddCard(newCard)}>Add Card</button>\n    </>\n  )\n}","/Users/richardwilliams/code/snapflash/src/pages/NewDeckPage/NewDeckPage.jsx",["135"],"import { waitForElementToBeRemoved } from '@testing-library/react';\nimport { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport AddCard from '../../components/AddCard/AddCard'\n\nexport default function NewDeckPage({ handleAddDeck }) {\n  // useRef to check validity (all cards have definitions)\n  // const deck = useLocation().state.deck;\n  \n  const history = useHistory()\n  const [deck,setDeck] = useState({\n    name:'',\n    description:''\n  });\n  const [newCard,setNewCard] = useState({\n    word:'',\n    definition:''\n  });\n  const [cards,setCards] = useState([]);\n\n  const wordInput = useRef();\n  const definitionInput = useRef();\n  const formRef = useRef();\n  const [invalidForm, setInvalidForm] = useState(false);\n  const [addingNewCard,setAddingNewCard] = useState(true)\n  const [changeInChild,setChangeInChild] = useState(false)\n\n\n  //Checks to see that all fields have a value, otherwise the form is invalid.\n  useEffect(() => {\n    // console.log('Am I Running?')\n    let hits = 0;\n    let length = 0;\n    // console.log(formRef)\n    formRef.current.childNodes.forEach((n) => {\n      // console.log(n)\n      if(n.localName === 'textarea'){\n        length += 1\n        if(n.value) {\n          hits += 1;\n        }\n      }\n      if(n.localName === 'div') {\n        n.childNodes.forEach((c) => {\n          if(c.localName === 'textarea'){\n            length += 1\n            if(c.value) {\n              hits += 1;\n            }\n        }\n        })\n      }\n    })\n    // console.log(\"I say the form is: \", invalidForm, ' hits=',hits, ' length=', length )\n    if (hits === length) {\n      setInvalidForm(false)\n    } else {\n      setInvalidForm(true)\n    }\n  }, [cards, deck, newCard]);\n  \n\n  // useEffect(() => {\n  //   focusFirst.current.focus()\n  // },[])\n\n  function handleCardInputChange(evt) {\n    // console.log({[evt.target.name]:evt.target.value})\n    setNewCard({\n      ...newCard,\n      [evt.target.name]:evt.target.value\n    })\n  }\n\n  function handleDeckInputChange(evt) {\n    console.log({[evt.target.name]:evt.target.value})\n    setDeck({\n      ...deck,\n      [evt.target.name]:evt.target.value\n    })\n  }\n\n  function handleCardsInputChange(evt,idx) {\n    const dupeCards = [...cards]\n    dupeCards[idx][evt.target.name] = evt.target.value;\n    setCards(dupeCards);\n  }\n\n  async function handleAddCard(newCardData) {\n    await setAddingNewCard(true)\n    const cardsArr = [...cards];\n    cardsArr.push(newCardData);\n    setCards(cardsArr);\n    setNewCard({\n      word:'',\n      definition:''\n    });\n    wordInput.current.focus();\n    wordInput.current.value = '';\n    definitionInput.current.value = '';\n    setInvalidForm(true);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const cardsArr = [...cards];\n    cardsArr.push(newCard);\n    handleAddDeck(deck,cardsArr);\n    history.push('/')\n  }\n\n  function checkIfTab(e) {\n    if(e.which === 9) {\n    e.preventDefault()\n    handleAddCard(newCard)\n    }\n  }\n\n  function handleCardsDelete(key) {\n    console.log('Hello?')\n    const dupeCards = [...cards]\n    dupeCards.splice(key,1);\n    console.log(dupeCards)\n    setCards(dupeCards);\n}\n\nfunction handleDeleteCard() {\n  const dupeCards = [...cards];\n  let lastCard = dupeCards.splice(-1,1);\n\n  wordInput.current.value = lastCard[0].word\n  definitionInput.current.value = lastCard[0].definition\n  setNewCard(lastCard[0]);\n  setCards(dupeCards);\n}\n\n  // -----Delete contents of inputs when deck is pressed\n  // useEffect(() =>{\n  //   setDeck({\n  //     name:'',\n  //     description:''\n  //   });\n  //   setNewCard({\n  //     word:'',\n  //     definition:''\n  //   });\n  //   setCards([]);\n  //   console.log(deck, 'and', cards)\n  //   setDeckBeGone(false);\n  // },[deckBeGone])\n  \n  // function handleDeckBeGone() {\n  //   setDeckBeGone(true)\n  // }\n  // console.log(invalidForm)\n  return (\n    <>\n      <h1>Make a New Deck Here</h1>\n      <form autocomplete=\"off\" ref={formRef} onSubmit={handleSubmit}>\n        <label>Name:</label>\n        <textarea name=\"name\"  type=\"text\" onChange={handleDeckInputChange}/>\n        <label>Description:</label>\n        <textarea name=\"description\" type=\"text\" onChange={handleDeckInputChange}/>\n        {cards.map((c,idx) => \n          <AddCard \n            card={c} \n            handleCardsInputChange={handleCardsInputChange} \n            cardKey={idx}\n            handleCardsDelete={handleCardsDelete}\n            />)}\n        { addingNewCard ?\n          <>\n            <label>Word:</label>\n            <textarea name=\"word\" type=\"text\" ref={wordInput} onChange={handleCardInputChange}/>\n            <label>Definition:</label>\n            <textarea name=\"definition\" onKeyDown={checkIfTab} type=\"text\" ref={definitionInput} onChange={handleCardInputChange}/>\n            {cards.length===0?\n            <>\n            </> \n            :\n            <p onClick={handleDeleteCard}>DELETE</p>\n            }\n          </>\n          :\n          <>\n          </>\n        }\n        <button disabled={invalidForm}>submit</button>\n      </form>\n      {/* <button onClick={handleDeckBeGone}>Delete Deck!</button> */}\n      <button onClick={() => handleAddCard(newCard)}>Add Card</button>\n    </>\n  )\n}","/Users/richardwilliams/code/snapflash/src/pages/DecksListPage/DecksListPage.jsx",["136","137","138","139"],"import { STATES } from 'mongoose';\nimport {useEffect, useState} from 'react';\nimport * as decksAPI from '../../utilities/decks-api'\nimport DecksListContainer from '../../components/DecksListContainer/DecksListContainer'\n\nexport default function DecksListPage({ decks, handleDeleteDeck, user }) {\n  \n  // const [decks ,setDecks] = useState();\n\n  // console.log('awfeipnwaeifunwaef', user)\n\n  // useEffect( function() {\n  //   async function getDecks() {\n  //   const decksObj = await decksAPI.getAll();\n  //   setDecks(decksObj)\n  //   }\n  //   getDecks();\n  // },[])\n\n  return (\n    <>\n      <DecksListContainer decks={decks} handleDeleteDeck={handleDeleteDeck} user={user} />\n    </>\n  )\n}","/Users/richardwilliams/code/snapflash/src/components/NavBar/NavBar.jsx",["140","141"],"import { Link, NavLink } from 'react-router-dom';\nimport * as userService from '../../utilities/users-service';\nimport './NavBar.css'\n\nexport default function NavBar({ user, setUser }) {\n\n  function handleLogOut() {\n    userService.logOut();\n    setUser(null);\n  }\n\n  return (\n    <nav class=\"navbar navbar-expand-lg navbar-light lt-bg-1 shdo-dk\">\n      <div className=\"navbar-brand txt-dk\">\n        <Link exact to=\"/decks\">SnapFlash</Link>\n      </div>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item\">\n            <Link className=\"nav-link\" exact to=\"/decks\">My Decks</Link>\n          </li>\n          <li class=\"nav-item\">\n            <Link className=\"nav-link\" exact to=\"/new\">Create Deck</Link>\n          </li>\n          <li class=\"nav-item\">\n            <Link className=\"nav-link\" exact to=\"/search\">Other Decks</Link>\n          </li>\n        </ul>\n          <span className=\"navbar-text toggle-hidden\">Welcome, {user.name}</span>\n          <Link className=\"nav-link\" onClick={handleLogOut}>Log Out</Link>\n      </div>\n    </nav>\n  );\n}\n{/* <a className=\"navbar-brand\" href=\"/\">SF</a>\n<li><Link exact to=\"/\">MyDecks</Link></li>\n<li><Link exact to=\"/new\">NewDeck</Link></li>\n<li><Link exact to=\"/search\">Search Other Decks</Link></li>\n<li><span className=\"navbar-text\">Welcome, {user.name}</span></li>\n<li><Link onClick={handleLogOut}>Log Out</Link></li> */}","/Users/richardwilliams/code/snapflash/src/utilities/send-request.js",[],"/Users/richardwilliams/code/snapflash/src/utilities/users-api.js",[],"/Users/richardwilliams/code/snapflash/src/components/CardListContainer/CardListContainer.jsx",["142"],"import { useState, } from 'react';\nimport Card from '../Card/Card'\n\nexport default function CardListContainer({deck}) {\n\n\n    let card = deck.cards.map((c) => {\n        return <Card card={c}/>\n    })\n\n    console.log(card)\n\n    return (\n        <>\n            {card}\n        </>\n    );\n}","/Users/richardwilliams/code/snapflash/src/components/FlipViewContainer/FlipViewContainer.jsx",[],"/Users/richardwilliams/code/snapflash/src/components/Card/Card.jsx",["143"],"import { useState } from 'react';\nimport './Card.css'\n\nexport default function Card({card}) {\n    \n    return (\n        <>\n        <div>\n            {card.word}\n        </div>\n        <div>\n            {card.definition}\n        </div>\n        </>\n    );\n}","/Users/richardwilliams/code/snapflash/src/components/LoginForm/LoginForm.jsx",[],"/Users/richardwilliams/code/snapflash/src/components/SignUpForm/SignUpForm.jsx",[],"/Users/richardwilliams/code/snapflash/src/components/AddCard/AddCard.jsx",["144","145","146","147"],"import { useState, useEffect, useRef } from 'react';\nimport Component from 'react'\n\nexport default function AddCard({card, cardKey, handleCardsInputChange, handleCardsDelete}) {\n\n    function handleChangeWithKey(evt) {\n        console.log({[evt.target.name]:evt.target.value})\n        handleCardsInputChange(evt,cardKey);\n    }\n\n    function handleDeleteCardWithKey(evt) {\n        handleCardsDelete(cardKey);\n    }\n\n    return (\n        <>\n            <div id={cardKey}>\n                <div className=\"shdo-dk lt-bg-1\">\n                    <div className=\"card-number\">#{cardKey + 1}</div>\n                    <div className=\"disable-select delete-deck\" onClick={handleDeleteCardWithKey}>\n                        <span className=\"delete-anim\">\n                            ×\n                        </span>\n                    </div>\n                        <div className=\"flx-spc-ard input-area-top\">\n                            <label className=\"txt-left\">Word:</label>\n                            <label className=\"txt-left\">Definition:</label>\n                        </div>\n                    <div className=\"flx-spc-ard input-area-bottom\">\n                        <textarea className=\"flx-item-big\" type=\"text\" onChange={handleChangeWithKey} name=\"word\" value={card.word}/>\n                        <textarea className=\"flx-item-big\" type=\"text\" onChange={handleChangeWithKey} name=\"definition\" value={card.definition}/>\n                    </div>\n                </div>      \n            </div>\n        </>\n    )\n}\n","/Users/richardwilliams/code/snapflash/src/components/UpdateCard/UpdateCard.jsx",["148","149","150","151"],"import { useState, useEffect, useRef } from 'react';\nimport Component from 'react'\n\nexport default function UpdateCard({card, cardKey, handleCardsInputChange, handleCardsDelete}) {\n\n    function handleChangeWithKey(evt) {\n        console.log({[evt.target.name]:evt.target.value})\n        handleCardsInputChange(evt,cardKey);\n    }\n\n    function handleDeleteCardWithKey(evt) {\n        console.log('Poppa?')\n        handleCardsDelete(cardKey);\n    }\n\n    return (\n        <>  \n            <div id={cardKey}>  \n                    <div className=\"shdo-dk lt-bg-1\">\n                        <div className=\"card-number\">#{cardKey + 1}</div>\n                        <div className=\"disable-select delete-deck\" onClick={handleDeleteCardWithKey}>\n                            <span className=\"delete-anim\">\n                                ×\n                            </span>\n                        </div>\n                        <div className=\"flx-spc-ard input-area-top\">\n                                <label className=\"txt-left\" htmlFor=\"\">Word:</label>\n                                <label className=\"txt-left\" htmlFor=\"\">Definition:</label>\n                        </div>\n                        <div className=\"flx-spc-ard input-area-bottom\">\n                            <textarea className=\"flx-item-big\" type=\"text\" onChange={handleChangeWithKey} name=\"word\" value={card.word}/>\n                            <textarea className=\"flx-item-big\" type=\"text\" onChange={handleChangeWithKey} name=\"definition\" value={card.definition}/>\n                        </div>      \n                    </div>\n            </div>\n        </>\n    )\n}","/Users/richardwilliams/code/snapflash/src/components/DecksListContainer/DecksListContainer.jsx",["152","153"],"import {useState} from 'react';\nimport Deck from '../Deck/Deck'\nimport { useLocation } from 'react-router-dom'\nimport './DecksListContainer.css'\n\nexport default function DecksListContainer({ decks, handleDeleteDeck, user }) {\n\n\n    const deck = decks.map((i,idx) => {\n        console.log('In the map function' , i)\n        return <Deck key={i._id} deck={i} handleDeleteDeck={handleDeleteDeck} currentUser={user} />\n      })\n    \n      console.log('returned from map' , deck)\n\n  return (\n    <>\n    <div className=\"container md-bg\">\n    <div className='big-txt txt-white'>My Decks</div>\n      <div className=\"card-grid\">\n          {deck}\n        </div>\n    </div>\n    </>\n  )\n}","/Users/richardwilliams/code/snapflash/src/components/CardFlip/CardFlip.jsx",["154"],"import { useState } from 'react';\nimport './CardFlip.css'\n\nexport default function CardFlip({currentCard}) {\n    \n    return (\n        <div className=\"flex-ctr-ctr\">\n            <div class=\"flip-card\">\n                <div class=\"flip-card-inner\">\n                    <div class=\"flip-card-front\">\n                        <div className=\"card-index\">1</div>\n                        <div className=\"flex-ctr-ctr card-content\">{currentCard.word}</div>\n                    </div>\n                    <div class=\"flip-card-back\">\n                        <div className=\"flex-ctr-ctr card-content\">{currentCard.definition}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/richardwilliams/code/snapflash/src/components/Deck/Deck.jsx",["155","156"],"import { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\nimport './Deck.css'\n\n\nexport default function Deck({ deck, handleDeleteDeck, currentUser }) {\n\n    function deleteDeck(evt) {\n\n        handleDeleteDeck(deck)\n    }\n\n    // console.log('CURRNET', currentUser)\n\n    // console.log('deckuser ', deck)\n    if(currentUser._id === deck.user) {\n        console.log('THESE ARE MINE')\n    }\n    // console.log('HI IM ON THE DECK PAGE', deck )\n    return (\n        <>\n        <div className=\"card shdo-dk\" style={{width: \"15rem\", justifySelf:\"center\"}}>\n        {currentUser._id === deck.user ?\n            <span className=\"disable-select delete-deck\" onClick={deleteDeck}>×</span>\n            :\n            <>\n            </>\n        }\n                <div className=\"card-header lt-bg-1\">\n                    <div className=\"md-txt-3\">{deck.name}</div>\n                    <span >Created By: <span style={{color:'blue'}}>{deck.userName}</span></span> \n                </div>\n                <div className=\"card-body wt-bg md-txt-1\">\n                    <div>{deck.description}</div>\n                </div>\n                    {currentUser._id === deck.user ?\n                    <div className=\"deck-buttons three-buts txt-white-a\">\n                        <Link className=\"cardl lt-bg-3 txt-white\" to={{pathname: `/edit`, state:{deck}}}>UPDATE</Link>\n                        <Link className=\"cardl lt-bg-2\" to={{pathname: '/list', state:{deck}}}>Study</Link>\n                        <Link className=\"cardl lt-bg-3\" to={{pathname: '/flip', state:{deck}}}>Flip</Link>\n                    </div>\n                    :\n                    <div className=\"deck-buttons two-buts text-white-a\">\n                        <Link className=\"cardl lt-bg-2\" to={{pathname: '/list', state:{deck}}}>Study</Link>\n                        <Link className=\"cardl lt-bg-1\" to={{pathname: '/flip', state:{deck}}}>Flip</Link>\n                    </div>             \n                    }\n        </div>       \n        </>\n    );\n}\n","/Users/richardwilliams/code/snapflash/src/pages/SearchDecksPage/SearchDecksPage.jsx",["157","158"],"import {useEffect, useState} from 'react';\nimport SearchDecksContainer from '../../components/SearchDecksContainer/SearchDecksContainer'\nimport * as searchAPI from '../../utilities/search-api'\n\n\nexport default function SearchDecksPage({ user }) {\n  \n  const [search,setSearch] = useState();\n  const [otherDecks, setOtherDecks] = useState([])\n\n  useEffect( function() {\n      async function getOtherDecks() {\n      const decksObj = await searchAPI.getAllOtherDecks();\n      setOtherDecks(decksObj)\n      }\n      getOtherDecks();\n      // console.log(otherDecks)\n    },[])\n\n  return (\n    <>\n      <SearchDecksContainer otherDecks={otherDecks} user={user}/>\n    </>\n  )\n}","/Users/richardwilliams/code/snapflash/src/utilities/search-api.js",[],"/Users/richardwilliams/code/snapflash/src/components/SearchDecksContainer/SearchDecksContainer.jsx",["159","160","161"],"// import {useState} from 'react';\nimport Deck from '../Deck/Deck'\nimport { useLocation } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\nexport default function SearchDecksContainer({ otherDecks, user }) {\n\n    const deck = otherDecks.map((i,idx) => {\n        console.log('In the map function' , i)\n        return <Deck key={i._id} deck={i} currentUser={user}/>\n    })\n    \n    console.log('returned from map' , deck)\n\n    return (\n        <div className=\"container\">\n            <div className=\"txt-white big-txt\"></div>\n                <div className=\"card-grid\">\n                    {deck}\n                </div>\n        </div>\n    )\n}","/Users/richardwilliams/code/snapflash/src/components/Footer/Footer.jsx",["162","163","164","165"],"import { Link, NavLink } from 'react-router-dom';\nimport * as userService from '../../utilities/users-service';\n\nexport default function Footer({ user, setUser }) {\n\n\n  return (\n    <>\n    <footer className=\"page-footer txt-right lt-bg-1 shdo-lt\">SnapFlash</footer>\n    </>\n  );\n}\n{/* <a className=\"navbar-brand\" href=\"/\">SF</a>\n<li><Link exact to=\"/\">MyDecks</Link></li>\n<li><Link exact to=\"/new\">NewDeck</Link></li>\n<li><Link exact to=\"/search\">Search Other Decks</Link></li>\n<li><span className=\"navbar-text\">Welcome, {user.name}</span></li>\n<li><Link onClick={handleLogOut}>Log Out</Link></li> */}",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":19,"column":9,"nodeType":"172","messageId":"173","endLine":19,"endColumn":16},{"ruleId":"170","severity":1,"message":"174","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"175","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":12},{"ruleId":"170","severity":1,"message":"174","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"175","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":12},{"ruleId":"176","severity":1,"message":"177","line":77,"column":5,"nodeType":"178","endLine":77,"endColumn":7,"suggestions":"179"},{"ruleId":"170","severity":1,"message":"180","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":35},{"ruleId":"170","severity":1,"message":"181","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":16},{"ruleId":"170","severity":1,"message":"182","line":2,"column":9,"nodeType":"172","messageId":"173","endLine":2,"endColumn":18},{"ruleId":"170","severity":1,"message":"174","line":2,"column":20,"nodeType":"172","messageId":"173","endLine":2,"endColumn":28},{"ruleId":"170","severity":1,"message":"183","line":3,"column":13,"nodeType":"172","messageId":"173","endLine":3,"endColumn":21},{"ruleId":"170","severity":1,"message":"184","line":1,"column":16,"nodeType":"172","messageId":"173","endLine":1,"endColumn":23},{"ruleId":"185","severity":1,"message":"186","line":38,"column":1,"nodeType":"187","messageId":"188","endLine":43,"endColumn":57},{"ruleId":"170","severity":1,"message":"174","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"174","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"174","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"182","line":1,"column":20,"nodeType":"172","messageId":"173","endLine":1,"endColumn":29},{"ruleId":"170","severity":1,"message":"189","line":1,"column":31,"nodeType":"172","messageId":"173","endLine":1,"endColumn":37},{"ruleId":"170","severity":1,"message":"190","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":17},{"ruleId":"170","severity":1,"message":"174","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"182","line":1,"column":20,"nodeType":"172","messageId":"173","endLine":1,"endColumn":29},{"ruleId":"170","severity":1,"message":"189","line":1,"column":31,"nodeType":"172","messageId":"173","endLine":1,"endColumn":37},{"ruleId":"170","severity":1,"message":"190","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":17},{"ruleId":"170","severity":1,"message":"174","line":1,"column":9,"nodeType":"172","messageId":"173","endLine":1,"endColumn":17},{"ruleId":"170","severity":1,"message":"191","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":21},{"ruleId":"170","severity":1,"message":"174","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"174","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"191","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":21},{"ruleId":"170","severity":1,"message":"192","line":8,"column":10,"nodeType":"172","messageId":"173","endLine":8,"endColumn":16},{"ruleId":"170","severity":1,"message":"193","line":8,"column":17,"nodeType":"172","messageId":"173","endLine":8,"endColumn":26},{"ruleId":"170","severity":1,"message":"191","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":21},{"ruleId":"170","severity":1,"message":"174","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":18},{"ruleId":"170","severity":1,"message":"182","line":4,"column":20,"nodeType":"172","messageId":"173","endLine":4,"endColumn":29},{"ruleId":"170","severity":1,"message":"194","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":14},{"ruleId":"170","severity":1,"message":"184","line":1,"column":16,"nodeType":"172","messageId":"173","endLine":1,"endColumn":23},{"ruleId":"170","severity":1,"message":"195","line":2,"column":13,"nodeType":"172","messageId":"173","endLine":2,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":13,"column":1,"nodeType":"187","messageId":"188","endLine":18,"endColumn":57},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'deck'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'waitForElementToBeRemoved' is defined but never used.","'STATES' is defined but never used.","'useEffect' is defined but never used.","'decksAPI' is defined but never used.","'NavLink' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useRef' is defined but never used.","'Component' is defined but never used.","'useLocation' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'Link' is defined but never used.","'userService' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},"Update the dependencies array to be: [deck]",{"range":"201","text":"202"},[2190,2192],"[deck]"]