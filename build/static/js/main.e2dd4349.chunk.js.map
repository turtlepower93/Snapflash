{"version":3,"sources":["utilities/users-api.js","utilities/users-service.js","utilities/send-request.js","utilities/decks-api.js","components/SignUpForm/SignUpForm.jsx","components/LoginForm/LoginForm.jsx","pages/AuthPage/AuthPage.jsx","components/AddCard/AddCard.jsx","pages/NewDeckPage/NewDeckPage.jsx","components/Deck/Deck.jsx","components/DecksListContainer/DecksListContainer.jsx","components/Quote/Quote.jsx","pages/DecksListPage/DecksListPage.jsx","components/Card/Card.jsx","components/CardListContainer/CardListContainer.jsx","pages/CardsListViewPage/CardsListViewPage.jsx","components/CardFlip/CardFlip.jsx","components/FlipViewContainer/FlipViewContainer.jsx","pages/CardsFlipViewPage/CardsFlipViewPage.jsx","components/SearchDecksContainer/SearchDecksContainer.jsx","utilities/search-api.js","pages/SearchDecksPage/SearchDecksPage.jsx","components/UpdateCard/UpdateCard.jsx","pages/UpdateDeckPage/UpdateDeckPage.jsx","components/NavBar/NavBar.jsx","components/Footer/Footer.jsx","pages/App/App.jsx","index.js"],"names":["BASE_URL","signUp","userData","sendRequest","login","credentials","url","a","method","payload","options","headers","body","JSON","stringify","token","getToken","Authorization","fetch","res","ok","json","Error","usersAPI","localStorage","setItem","getUser","getItem","parse","atob","split","exp","Date","now","removeItem","user","console","log","getAll","createDeck","deckData","updateDeck","deck","_id","deleteDeck","hideDeck","SignUpForm","state","name","email","password","confirm","error","handleChange","evt","setState","target","value","handleSubmit","preventDefault","formData","props","setUser","disable","this","className","autoComplete","onSubmit","type","onChange","required","disabled","Component","LogIn","useState","setCredentials","setError","usersService","AuthPage","showLogin","setShowLogin","style","width","fontSize","onClick","AddCard","card","cardKey","handleCardsInputChange","handleCardsDelete","handleChangeWithKey","id","word","definition","NewDeckPage","handleAddDeck","history","useHistory","description","setDeck","newCard","setNewCard","cards","setCards","wordInput","useRef","definitionInput","formRef","invalidForm","setInvalidForm","addingNewCard","setAddingNewCard","handleCardInputChange","handleDeckInputChange","idx","dupeCards","newCardData","cardsArr","push","current","focus","checkIfTab","e","which","handleAddCard","key","splice","handleDeleteCard","lastCard","useEffect","checkValidity","opacity","fontStyle","ref","map","c","length","onKeyDown","padding","Deck","handleDeleteDeck","currentUser","handleHideDeck","justifySelf","color","userName","hidden","to","pathname","DecksListContainer","decks","i","background","txt-dk","Quote","quote","setQuote","timerRef","quoteAnim","setQuoteAnim","then","response","data","Math","floor","random","fetchFirst","setInterval","clearInterval","text","author","DecksListPage","Card","margin","class","CardListContainer","CardsListViewPage","location","useLocation","CardFlip","currentCard","cardIdx","FlipViewContainer","setCurrentCard","setCardIdx","HandleChangeCard","deckSize","startingCard","whereAmI","indexOf","innerHTML","CardsFlipViewPage","SearchDecksContainer","otherDecks","getAllOtherDecks","SearchDecksPage","setOtherDecks","searchAPI","decksObj","getOtherDecks","UpdateCard","htmlFor","UpdateDeckPage","handleUpdateDeck","setUpdateDeck","defaultValue","NavBar","exact","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","App","setDecks","newDeckData","newCardsData","decksAPI","newDeck","updateDeckData","UpdateCardsData","dupeDecks","filter","d","updateHide","getDecks","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wWAEMA,EAAW,aAEV,SAASC,EAAOC,GACrB,OAAOC,EAAYH,EAAU,OAAQE,GAGhC,SAASE,EAAMC,GACpB,OAAOF,EAAY,GAAD,OAAIH,EAAJ,UAAsB,OAAQK,G,SAUnCF,E,8EAAf,WAA2BG,GAA3B,mCAAAC,EAAA,6DAAgCC,EAAhC,+BAAyC,MAAOC,EAAhD,+BAA0D,KAGlDC,EAAU,CAAEF,UACdC,IACFC,EAAQC,QAAU,CAAE,eAAgB,oBACpCD,EAAQE,KAAOC,KAAKC,UAAUL,KAG1BM,EAAQC,OAGZN,EAAQC,QAAUD,EAAQC,SAAW,GACrCD,EAAQC,QAAQM,cAAhB,iBAA0CF,IAb9C,SAeoBG,MAAMZ,EAAKI,GAf/B,YAeQS,EAfR,QAiBUC,GAjBV,0CAiBqBD,EAAIE,QAjBzB,cAkBQ,IAAIC,MAAM,eAlBlB,6C,sBCjBO,SAAerB,EAAtB,kC,4CAAO,WAAsBC,GAAtB,eAAAK,EAAA,+EAEiBgB,EAAgBrB,GAFjC,cAEGa,EAFH,OAIHS,aAAaC,QAAQ,QAASV,GAJ3B,kBAKIW,KALJ,sCAOG,IAAIJ,MAAM,mBAPb,0D,sBAUA,SAAelB,EAAtB,kC,4CAAO,WAAqBC,GAArB,eAAAE,EAAA,+EAEiBgB,EAAelB,GAFhC,cAEGU,EAFH,OAIHS,aAAaC,QAAQ,QAASV,GAJ3B,kBAKIW,KALJ,sCAOG,IAAIJ,MAAM,iBAPb,0D,sBAeA,SAASN,IAEd,IAAMD,EAAQS,aAAaG,QAAQ,SACnC,OAAKZ,EAEWF,KAAKe,MAAMC,KAAKd,EAAMe,MAAM,KAAK,KAErCC,IAAMC,KAAKC,MAAQ,KAC7BT,aAAaU,WAAW,SACjB,MAEFnB,EARY,KAWd,SAASW,IACd,IAAMX,EAAQC,IAEd,OAAOD,EAAQF,KAAKe,MAAMC,KAAKd,EAAMe,MAAM,KAAK,KAAKK,KAAO,K,MC1C/C,SAAehC,EAA9B,kC,4CAAe,WAA2BG,GAA3B,mCAAAC,EAAA,6DAAgCC,EAAhC,+BAAyC,MAAOC,EAAhD,+BAA0D,KAG/DC,EAAU,CAAEF,UACdC,IACFC,EAAQC,QAAU,CAAE,eAAgB,oBACpCD,EAAQE,KAAOC,KAAKC,UAAUL,KAG1BM,EAAQC,OAGZN,EAAQC,QAAUD,EAAQC,SAAW,GACrCD,EAAQC,QAAQM,cAAhB,iBAA0CF,IAbjC,SAeOG,MAAMZ,EAAKI,GAflB,UAeLS,EAfK,OAgBXiB,QAAQC,IAAIlB,IAERA,EAAIC,GAlBG,0CAkBQD,EAAIE,QAlBZ,cAmBL,IAAIC,MAAM,eAnBL,6C,sBCAf,IAAMtB,EAAW,YAGV,SAASsC,IACZ,OAAOnC,EAAYH,GAOhB,SAASuC,EAAWC,GACvB,OAAOrC,EAAYH,EAAU,OAAQwC,GAGlC,SAASC,EAAWC,GACvB,OAAOvC,EAAY,GAAD,OAAIH,EAAJ,YAAgB0C,EAAKC,KAAO,MAAOD,GAOlD,SAASE,EAAWF,GACvB,OAAOvC,EAAY,GAAD,OAAIH,EAAJ,YAAgB0C,EAAKC,KAAO,UAG3C,SAASE,EAASH,GACrB,OAAOvC,EAAY,GAAD,OAAIH,EAAJ,YAAgB0C,EAAKC,IAArB,SAAiC,O,mDC3BlCG,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,QAAS,GACTC,MAAO,I,EAGTC,aAAe,SAACC,GAAS,IAAD,EACtB,EAAKC,UAAL,mBACGD,EAAIE,OAAOR,KAAOM,EAAIE,OAAOC,OADhC,sBAES,IAFT,K,EAMFC,a,uCAAe,WAAOJ,GAAP,iBAAA/C,EAAA,6DACb+C,EAAIK,iBADS,gBAGLC,EAHK,eAGW,EAAKb,QACXK,aACTQ,EAAST,QALL,SAMQlD,EAAO2D,GANf,OAMLzB,EANK,OAOX,EAAK0B,MAAMC,QAAQ3B,GAPR,kDAUX,EAAKoB,SAAS,CAAEH,MAAO,+BAVZ,0D,6GAeb,IAAMW,EAAUC,KAAKjB,MAAMG,WAAac,KAAKjB,MAAMI,QACnD,OACE,8BACE,sBAAKc,UAAU,iBAAf,UACE,oBAAGA,UAAU,gBAAb,iBAAoCD,KAAKjB,MAAMK,SAC/C,uBACEa,UAAU,YACVC,aAAa,MACbC,SAAUH,KAAKN,aAHjB,UAKE,uBAAOO,UAAU,aAAjB,kBACA,uBACEA,UAAU,aACVG,KAAK,OACLpB,KAAK,OACLS,MAAOO,KAAKjB,MAAMC,KAClBqB,SAAUL,KAAKX,aACfiB,UAAQ,IAEV,uBAAOL,UAAU,aAAjB,mBACA,uBACEA,UAAU,aACVG,KAAK,QACLpB,KAAK,QACLS,MAAOO,KAAKjB,MAAME,MAClBoB,SAAUL,KAAKX,aACfiB,UAAQ,IAEV,uBAAOL,UAAU,aAAjB,sBACA,uBACEA,UAAU,aACVG,KAAK,WACLpB,KAAK,WACLS,MAAOO,KAAKjB,MAAMG,SAClBmB,SAAUL,KAAKX,aACfiB,UAAQ,IAEV,uBAAOL,UAAU,aAAjB,qBACA,uBACEA,UAAU,aACVG,KAAK,WACLpB,KAAK,UACLS,MAAOO,KAAKjB,MAAMI,QAClBkB,SAAUL,KAAKX,aACfiB,UAAQ,IAEV,wBAAQL,UAAU,cAAcG,KAAK,SAASG,SAAUR,EAAxD,iC,GA7E4BS,aCAzB,SAASC,EAAT,GAA6B,IAAZX,EAAW,EAAXA,QAAW,EACHY,mBAAS,CAC7CzB,MAAO,GACPC,SAAU,KAH6B,mBAClC7C,EADkC,KACrBsE,EADqB,OAKfD,mBAAS,IALM,mBAKlCtB,EALkC,KAK3BwB,EAL2B,KAOzC,SAASvB,EAAaC,GACpBqB,EAAe,2BAAKtE,GAAN,kBAAoBiD,EAAIE,OAAOR,KAAOM,EAAIE,OAAOC,SAC/DmB,EAAS,IAT8B,4CAYzC,WAA4BtB,GAA5B,eAAA/C,EAAA,6DAEE+C,EAAIK,iBAFN,kBAOuBkB,EAAmBxE,GAP1C,OAOU8B,EAPV,OAQI2B,EAAQ3B,GARZ,gDAUIyC,EAAS,6BAVb,0DAZyC,sBA0BzC,OACE,qCACa,KAAVxB,EAAe,oBAAGa,UAAU,gBAAb,iBAAoCb,KAAa,6BACjE,8BACE,qBAAKa,UAAU,iBAAiBE,SA9BG,4CA8BnC,SACE,uBAAMF,UAAU,YAAYC,aAAa,MAAzC,UACE,uBAAOD,UAAU,aAAjB,mBACA,uBACEA,UAAU,aACVG,KAAK,OACLpB,KAAK,QACLS,MAAOpD,EAAY4C,MACnBoB,SAAUhB,EACViB,UAAQ,IAEV,uBAAOL,UAAU,aAAjB,sBACA,uBACEA,UAAU,aACVG,KAAK,WACLpB,KAAK,WACLS,MAAOpD,EAAY6C,SACnBmB,SAAUhB,EACViB,UAAQ,IAEV,wBAAQL,UAAU,cAAcG,KAAK,SAArC,8B,MChDG,SAASU,EAAT,GAAgC,IAAZhB,EAAW,EAAXA,QAAW,EACVY,oBAAS,GADC,mBACrCK,EADqC,KAC1BC,EAD0B,KAG5C,OACE,+BACE,qBAAKf,UAAU,4BAA4BgB,MAAO,CAAEC,MAAO,QAA3D,SACE,sBAAKjB,UAAU,YAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,UAAUgB,MAAO,CAAEE,SAAU,QAA3C,uBAGA,mBAAGlB,UAAU,mBAAmBgB,MAAO,CAAEE,SAAU,UAAnD,+CAIF,qBAAKlB,UAAU,qBACf,qBAAKA,UAAU,6DAAf,SACE,qBAAKA,UAAU,cAAf,SACGc,EACC,qBAAKd,UAAU,YAAf,SACE,qCACE,cAAC,EAAD,CAAWH,QAASA,IACpB,wBACEG,UAAU,mBACVmB,QAAS,kBAAMJ,GAAcD,IAF/B,SAIGA,EAAY,UAAY,gBAK/B,qBAAKd,UAAU,YAAf,SACE,qCACE,cAAC,EAAD,CAAYH,QAASA,IACrB,wBACEG,UAAU,mBACVmB,QAAS,kBAAMJ,GAAcD,IAF/B,SAIGA,EAAY,UAAY,oBAOrC,qBAAKd,UAAU,wBClDV,SAASoB,EAAT,GAKX,IAJFC,EAIC,EAJDA,KACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,uBACAC,EACC,EADDA,kBAEA,SAASC,EAAoBpC,GAC3BkC,EAAuBlC,EAAKiC,GAO9B,OACE,mCACE,qBAAKI,GAAIJ,EAAT,SACE,sBAAKtB,UAAU,kBAAf,UACE,sBAAKA,UAAU,cAAf,cAA+BsB,EAAU,KACzC,qBACEtB,UAAU,6BACVmB,QAXV,SAAiC9B,GAC/BmC,EAAkBF,IAQZ,SAIE,sBAAMtB,UAAU,cAAhB,oBAEF,sBAAKA,UAAU,6BAAf,UACE,uBAAOA,UAAU,WAAjB,mBACA,uBAAOA,UAAU,WAAjB,4BAEF,sBAAKA,UAAU,gCAAf,UACE,0BACEK,UAAQ,EACRL,UAAU,eACVG,KAAK,OACLC,SAAUqB,EACV1C,KAAK,OACLS,MAAO6B,EAAKM,OAEd,0BACEtB,UAAQ,EACRL,UAAU,eACVG,KAAK,OACLC,SAAUqB,EACV1C,KAAK,aACLS,MAAO6B,EAAKO,uBCxCX,SAASC,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAC9BC,EAAUC,cADqC,EAE7BvB,mBAAS,CAC/B1B,KAAM,GACNkD,YAAa,KAJsC,mBAE9CxD,EAF8C,KAExCyD,EAFwC,OAMvBzB,mBAAS,CACrCkB,KAAM,GACNC,WAAY,KARuC,mBAM9CO,EAN8C,KAMrCC,EANqC,OAU3B3B,mBAAS,IAVkB,mBAU9C4B,EAV8C,KAUvCC,EAVuC,KAY/CC,EAAYC,mBACZC,EAAkBD,mBAClBE,EAAUF,mBAdqC,EAef/B,oBAAS,GAfM,mBAe9CkC,EAf8C,KAejCC,EAfiC,OAgBXnC,oBAAS,GAhBE,mBAgB9CoC,EAhB8C,KAgB/BC,EAhB+B,KAkBrD,SAASC,EAAsB1D,GAC7B+C,EAAW,2BACND,GADK,kBAEP9C,EAAIE,OAAOR,KAAOM,EAAIE,OAAOC,SAIlC,SAASwD,EAAsB3D,GAC7B6C,EAAQ,2BACHzD,GADE,kBAEJY,EAAIE,OAAOR,KAAOM,EAAIE,OAAOC,SAIlC,SAAS+B,EAAuBlC,EAAK4D,GACnC,IAAMC,EAAS,YAAOb,GACtBa,EAAUD,GAAK5D,EAAIE,OAAOR,MAAQM,EAAIE,OAAOC,MAC7C8C,EAASY,GAnC0C,4CAsCrD,WAA6BC,GAA7B,eAAA7G,EAAA,sEACQwG,GAAiB,GADzB,QAEQM,EAFR,YAEuBf,IACZgB,KAAKF,GACdb,EAASc,GACThB,EAAW,CACTT,KAAM,GACNC,WAAY,KAEdW,EAAUe,QAAQC,QAClBhB,EAAUe,QAAQ9D,MAAQ,GAC1BiD,EAAgBa,QAAQ9D,MAAQ,GAXlC,4CAtCqD,sBA4DrD,SAASgE,EAAWC,GACF,IAAZA,EAAEC,QACJD,EAAE/D,iBA9D+C,oCA+DjDiE,CAAcxB,IAIlB,SAASX,EAAkBoC,GACzB,IAAMV,EAAS,YAAOb,GACtBa,EAAUW,OAAOD,EAAK,GACtBtB,EAASY,GAGX,SAASY,IACP,IAAMZ,EAAS,YAAOb,GAClB0B,EAAWb,EAAUW,QAAQ,EAAG,GAEpCtB,EAAUe,QAAQ9D,MAAQuE,EAAS,GAAGpC,KACtCc,EAAgBa,QAAQ9D,MAAQuE,EAAS,GAAGnC,WAC5CQ,EAAW2B,EAAS,IACpBzB,EAASY,GAsBX,OAnBAc,qBAAU,WACRtB,EAAQY,QAAQW,gBACZrB,GAAe,GACfA,GAAe,KAClB,CACD,CACEG,EACAA,EACAC,EACAc,KAIJE,qBAAU,WACa,KAAjB7B,EAAQR,MACViB,GAAe,KAEhB,CAAC,CAACY,KAGH,mCAEE,sBAAKxD,UAAU,kBAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,sBAAMA,UAAU,kBAAhB,oBACe,KAAdvB,EAAKM,KACJ,sBAAMiC,MAAO,CAAEkD,QAAS,MAAOC,UAAW,UAA1C,qBAEA,+BAAO1F,EAAKM,UAGhB,sBAAKiB,UAAU,8BAAf,UACE,sBAAMA,UAAU,kBAAhB,2BACsB,KAArBvB,EAAKwD,YACJ,sBAAMjB,MAAO,CAAEkD,QAAS,MAAOC,UAAW,UAA1C,wBAIA,+BAAO1F,EAAKwD,iBAMhB,uBAAMhC,aAAa,MAAMmE,IAAK1B,EAASxC,SA3E7C,SAAsBb,GACpBA,EAAIK,iBACJ,IAAM0D,EAAQ,YAAOf,GACrBe,EAASC,KAAKlB,GACdL,EAAcrD,EAAM2E,GACpBrB,EAAQsB,KAAK,WAsET,UACE,sBAAKrD,UAAU,kBAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,uBAAOA,UAAU,WAAjB,mBACA,uBAAOA,UAAU,WAAjB,6BAEF,sBAAKA,UAAU,gCAAf,UACE,0BACEK,UAAQ,EACRL,UAAU,eACVjB,KAAK,OACLoB,KAAK,OACLC,SAAU4C,IAEZ,0BACE3C,UAAQ,EACRL,UAAU,eACVjB,KAAK,cACLoB,KAAK,OACLC,SAAU4C,UAMfX,EAAMgC,KAAI,SAACC,EAAGrB,GAAJ,OACT,cAAC7B,EAAD,CACEC,KAAMiD,EACN/C,uBAAwBA,EACxBD,QAAS2B,EACTzB,kBAAmBA,OAKtBqB,EACC,mCACE,sBAAK7C,UAAU,kBAAf,UAEoB,IAAjBqC,EAAMkC,OACL,6BAEA,qBACEvE,UAAU,6BACVmB,QAAS2C,EAFX,SAIE,sBAAM9D,UAAU,cAAhB,oBAGJ,sBAAKA,UAAU,6BAAf,UACE,uBAAOA,UAAU,WAAjB,mBACA,uBAAOA,UAAU,WAAjB,4BAEF,sBAAKA,UAAU,cAAf,UACE,0BACEK,UAAQ,EACRL,UAAU,eACVjB,KAAK,OACLoB,KAAK,OACLiE,IAAK7B,EACLnC,SAAU2C,IAEZ,0BACE1C,UAAQ,EACRL,UAAU,eACVjB,KAAK,aACLyF,UAAW,SAACf,GAAD,OAAOD,EAAWC,IAC7BtD,KAAK,OACLiE,IAAK3B,EACLrC,SAAU2C,OAGd,qBAAK/B,MAAO,CAAEyD,QAAS,QAAvB,8CAMJ,6BAEF,wBACEzE,UAAU,6BACV0B,GAAG,kBACHpB,SAAUqC,EAHZ,kC,MChNK,SAAS+B,EAAT,GAKX,IAJFjG,EAIC,EAJDA,KACAkG,EAGC,EAHDA,iBACAC,EAEC,EAFDA,YACAC,EACC,EADDA,eAUA,OACE,mCACE,sBACE7E,UAAU,eACV0B,GAAG,kBACHV,MAAO,CAAEC,MAAO,QAAS6D,YAAa,UAHxC,UAKGF,EAAYlG,MAAQD,EAAKP,KACxB,sBAAM8B,UAAU,6BAA6BmB,QAhBrD,SAAoB9B,GAClBsF,EAAiBlG,IAeX,kBAIA,6BAEF,sBAAKuB,UAAU,oBAAf,UACE,qBAAKA,UAAU,WAAf,SAA2BvB,EAAKM,OAChC,gDACc,sBAAMiC,MAAO,CAAE+D,MAAO,QAAtB,SAAiCtG,EAAKuG,iBAGtD,qBAAKhF,UAAU,2BAAf,SACE,8BAAMvB,EAAKwD,gBAEZ2C,EAAYlG,MAAQD,EAAKP,KACxB,qCACE,yBACE8B,UAAWvB,EAAKwG,OAAS,SAAW,YACpC9D,QA/BZ,SAAkB9B,GAChBwF,EAAepG,IA4BP,UAIG,IACAA,EAAKwG,OAAS,cAAgB,eAAgB,OAEjD,sBAAKjF,UAAU,sCAAf,UACE,cAAC,IAAD,CACEA,UAAU,mCACVkF,GAAI,CAAEC,SAAS,QAAUrG,MAAO,CAAEL,SAFpC,oBAMA,cAAC,IAAD,CACEuB,UAAU,yBACVkF,GAAI,CAAEC,SAAU,QAASrG,MAAO,CAAEL,SAFpC,mBAMA,cAAC,IAAD,CACEuB,UAAU,yBACVkF,GAAI,CAAEC,SAAU,QAASrG,MAAO,CAAEL,SAFpC,wBASJ,sBAAKuB,UAAU,oCAAf,UACE,cAAC,IAAD,CACEA,UAAU,gBACVkF,GAAI,CAAEC,SAAU,QAASrG,MAAO,CAAEL,SAFpC,mBAMA,cAAC,IAAD,CACEuB,UAAU,gBACVkF,GAAI,CAAEC,SAAU,QAASrG,MAAO,CAAEL,SAFpC,0B,MC1EG,SAAS2G,EAAT,GAKX,IAJFC,EAIC,EAJDA,MACAV,EAGC,EAHDA,iBACAzG,EAEC,EAFDA,KACA2G,EACC,EADDA,eAEMpG,EAAO4G,EAAMhB,KAAI,SAACiB,EAAGrC,GACzB,OACE,cAAC,EAAD,CAEExE,KAAM6G,EACNX,iBAAkBA,EAClBC,YAAa1G,EACb2G,eAAgBA,GAJXS,EAAE5G,QASb,OACE,mCACE,sBAAKsB,UAAU,kBAAf,UACE,qBAAKA,UAAU,oBAAf,sBACA,sBAAKA,UAAU,YAAf,UACE,qBACEA,UAAU,uBACV0B,GAAG,kBACHV,MAAO,CAAEC,MAAO,QAAS6D,YAAa,UAHxC,SAKE,qBAAK9E,UAAU,eAAegB,MAAO,CAAEuE,WAAY,WAAnD,SACE,eAAC,IAAD,CACEvF,UAAU,yBACVkF,GAAI,CAAEC,SAAU,QAFlB,0BAKE,qBAAKnF,UAAU,UAAUwF,UAAA,EAAzB,sBAML/G,UC1CI,SAASgH,IAAS,IAAD,EACJhF,mBAAS,IADL,mBACvBiF,EADuB,KAChBC,EADgB,KAExBC,EAAWpD,mBAFa,EAGI/B,mBAAS,cAHb,mBAGvBoF,EAHuB,KAGZC,EAHY,KAqC9B,OA/BA9B,qBAAU,WAAY,4CACpB,sBAAA1H,EAAA,sEACQW,MAAM,+BACT8I,MAAK,SAAUC,GACd,OAAOA,EAAS5I,UAEjB2I,MAAK,SAAUE,GACdN,EAASM,EAAKC,KAAKC,MAAsB,KAAhBD,KAAKE,eANpC,4CADoB,uBAAC,WAAD,wBAUpBC,KACC,IAGHrC,qBAAU,WAYR,OAXA4B,EAAStC,QAAUgD,aAAY,WAC7BR,EAAa,IACb7I,MAAM,+BACH8I,MAAK,SAAUC,GACd,OAAOA,EAAS5I,UAEjB2I,MAAK,SAAUE,GACdN,EAASM,EAAKC,KAAKC,MAAsB,KAAhBD,KAAKE,YAC9BN,EAAa,mBAEhB,KACI,WACLS,cAAcX,EAAStC,YAExB,IAGD,sBAAKtD,UAAS,0BAAqB6F,GAAnC,UACE,4BAAIH,EAAMc,OACRd,EAAMe,OAAkC,kCAAKf,EAAMe,UAApC,mDCtCR,SAASC,EAAT,GAKX,IAJFrB,EAIC,EAJDA,MACAV,EAGC,EAHDA,iBACAzG,EAEC,EAFDA,KACA2G,EACC,EADDA,eAEA,OACE,qCACE,cAACY,EAAD,IASA,cAAC,EAAD,CACEJ,MAAOA,EACPV,iBAAkBA,EAClBzG,KAAMA,EACN2G,eAAgBA,OCzBT,SAAS8B,EAAT,GAAuB,IAARtF,EAAO,EAAPA,KAE1B,OACI,sBAAKrB,UAAU,uDAAuDgB,MAAO,CAAC4F,OAAO,YAAa3F,MAAM,OAAxG,UACI,qBAAK4F,MAAM,qBAAX,SACI,qBAAKA,MAAM,aAAX,SACI,qBAAKA,MAAM,cAAX,SACI,qBAAK7G,UAAU,4BAAf,SAA4CqB,EAAKM,aAI7D,qBAAKkF,MAAM,oBAAX,SACI,qBAAKA,MAAM,aAAX,SACI,qBAAKA,MAAM,cAAX,SACI,qBAAK7G,UAAU,4BAAf,SAA4CqB,EAAKO,sBCZ1D,SAASkF,EAAT,GAAsC,IAC/CzF,EAD8C,EAAR5C,KAC1B4D,MAAMgC,KAAI,SAACC,GACzB,OAAO,cAACqC,EAAD,CAAMtF,KAAMiD,OAGrB,OAAO,mCAAGjD,ICJG,SAAS0F,IACtB,IAAMC,EAAWC,cAGNxI,EACPwI,cADFnI,MAASL,KAGX,OACE,qCACE,6BAAKA,EAAKM,OACV,6BAAKN,EAAKwD,cACV,cAAC6E,EAAD,CAAmBE,SAAUA,EAAUvI,KAAMA,O,MCZpC,SAASyI,EAAT,GAA2C,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,QAE3C,OACI,qBAAKpH,UAAU,yBAAf,SACI,qBAAK6G,MAAM,YAAX,SACI,sBAAKA,MAAM,kBAAX,UACI,sBAAKA,MAAM,kBAAX,UACI,qBAAK7G,UAAU,aAAf,SAA6BoH,IAC7B,qBAAKpH,UAAU,4BAAf,SAA4CmH,EAAYxF,UAE5D,qBAAKkF,MAAM,iBAAX,SACI,qBAAK7G,UAAU,4BAAf,SAA4CmH,EAAYvF,sBCTjE,SAASyF,EAAT,GAAsC,IAAT5I,EAAQ,EAARA,KAAQ,EACZgC,mBAAShC,EAAK4D,MAAM,IADR,mBAC3C8E,EAD2C,KAC9BG,EAD8B,OAEpB7G,mBAAS,GAFW,mBAE3C2G,EAF2C,KAElCG,EAFkC,KAIlD,SAASC,EAAiBnI,GACxB,IAAIoI,EAAWhJ,EAAK4D,MAAMkC,OACtBmD,EAAeP,EACfQ,EAAWlJ,EAAK4D,MAAMuF,QAAQF,GAEL,aAAzBrI,EAAIE,OAAOsI,YACbF,GAAY,GACG,IACbA,EAAWF,EAAW,GAGG,SAAzBpI,EAAIE,OAAOsI,YACbF,GAAY,EACRlJ,EAAK4D,MAAMoF,EAAW,GAAG/I,MAAQgJ,EAAahJ,MAChDiJ,EAAW,IAGfJ,EAAWI,EAAW,GACtBL,EAAe7I,EAAK4D,MAAMsF,IAG5B,OACE,qCACE,cAAC,EAAD,CAAUR,YAAaA,EAAaC,QAASA,IAC7C,uBAAM1F,GAAG,YAAT,UACE,wBAAQ1B,UAAU,OAAOmB,QAASqG,EAAlC,sBAGA,wBAAQxH,UAAU,OAAOmB,QAASqG,EAAlC,wBCjCO,SAASM,KAAqB,IAEhCrJ,EACPwI,cADFnI,MAASL,KAGX,OACE,mCACE,sBAAKuB,UAAU,iBAAf,UACE,sBACEA,UAAU,6BACVgB,MAAO,CAAEC,MAAO,MAAOwD,QAAS,OAAQmC,OAAQ,QAFlD,UAIE,qBAAK5G,UAAU,WAAf,SAA2BvB,EAAKM,OAChC,sBAAKiB,UAAU,WAAf,0BAAwCvB,EAAKwD,eAC7C,sBAAKjC,UAAU,WAAf,yBACc,sBAAMgB,MAAO,CAAE+D,MAAO,SAAtB,SAAkCtG,EAAKuG,iBAGvD,cAACqC,EAAD,CAAmB5I,KAAMA,SClBlB,SAASsJ,GAAT,GAAqD,IAArBC,EAAoB,EAApBA,WAAY9J,EAAQ,EAARA,KACnDO,EAAOuJ,EAAW3D,KAAI,SAACiB,EAAGrC,GAC9B,OAAO,cAAC,EAAD,CAAkBxE,KAAM6G,EAAGV,YAAa1G,GAA7BoH,EAAE5G,QAGtB,OACE,sBAAKsB,UAAU,kBAAf,UACE,qBAAKA,UAAU,oBAAf,+BACA,qBAAKA,UAAU,YAAf,SAA4BvB,OCN3B,SAASwJ,KACZ,OAAO/L,EAJM,cCEF,SAASgM,GAAT,GAAoC,IAAThK,EAAQ,EAARA,KAAQ,EACZuC,mBAAS,IADG,mBACzCuH,EADyC,KAC7BG,EAD6B,KAWhD,OARAnE,qBAAU,WAAY,4CACpB,4BAAA1H,EAAA,sEACyB8L,KADzB,OACQC,EADR,OAEEF,EAAcE,GAFhB,4CADoB,uBAAC,WAAD,wBAKpBC,KACC,IAGD,mCACE,cAACP,GAAD,CAAsBC,WAAYA,EAAY9J,KAAMA,MCjB3C,SAASqK,GAAT,GAKX,IAJFlH,EAIC,EAJDA,KACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,uBACAC,EACC,EADDA,kBAEA,SAASC,EAAoBpC,GAC3BkC,EAAuBlC,EAAKiC,GAO9B,OACE,mCACE,qBAAKI,GAAIJ,EAAT,SACE,sBAAKtB,UAAU,kBAAf,UACE,sBAAKA,UAAU,cAAf,cAA+BsB,EAAU,KACzC,qBACEtB,UAAU,6BACVmB,QAXV,WACEK,EAAkBF,IAQZ,SAIE,sBAAMtB,UAAU,cAAhB,oBAEF,sBAAKA,UAAU,6BAAf,UACE,uBAAOA,UAAU,WAAWwI,QAAQ,GAApC,mBAGA,uBAAOxI,UAAU,WAAWwI,QAAQ,GAApC,4BAIF,sBAAKxI,UAAU,gCAAf,UACE,0BACEA,UAAU,eACVG,KAAK,OACLC,SAAUqB,EACV1C,KAAK,OACLS,MAAO6B,EAAKM,OAEd,0BACE3B,UAAU,eACVG,KAAK,OACLC,SAAUqB,EACV1C,KAAK,aACLS,MAAO6B,EAAKO,uBC1CX,SAAS6G,GAAT,GAA+C,IAArBC,EAAoB,EAApBA,iBACnC3G,EAAUC,cAD6C,EAGvBvB,mBAAS,CAC3C1B,KAAM,GACNkD,YAAa,KAL4C,mBAGpDzD,EAHoD,KAGxCmK,EAHwC,OAO7BlI,mBAAS,CACrCkB,KAAM,GACNC,WAAY,KAT6C,mBAOpDO,EAPoD,KAO3CC,EAP2C,OAWjC3B,mBAAS,IAXwB,mBAWpD4B,EAXoD,KAW7CC,EAX6C,KAahD7D,EACPwI,cADFnI,MAASL,KAEL8D,EAAYC,mBACZC,EAAkBD,mBAClBE,EAAUF,mBAjB2C,EAkBrB/B,oBAAS,GAlBY,mBAkBpDkC,EAlBoD,KAkBvCC,EAlBuC,OAmBjBnC,oBAAS,GAnBQ,mBAmBpDoC,EAnBoD,KAmBrCC,EAnBqC,KAuC3D,SAASE,EAAsB3D,GAC7BsJ,EAAc,2BACTnK,GADQ,kBAEVa,EAAIE,OAAOR,KAAOM,EAAIE,OAAOC,SAKlC,SAASuD,EAAsB1D,GAC7B+C,EAAW,2BACND,GADK,kBAEP9C,EAAIE,OAAOR,KAAOM,EAAIE,OAAOC,SAKlC,SAAS+B,EAAuBlC,EAAK4D,GACnC,IAAMC,EAAS,YAAOb,GACtBa,EAAUD,GAAK5D,EAAIE,OAAOR,MAAQM,EAAIE,OAAOC,MAC7C8C,EAASY,GA1DgD,4CA8D3D,WAA6BC,GAA7B,eAAA7G,EAAA,sEACQwG,GAAiB,GADzB,QAEQM,EAFR,YAEuBf,IACZgB,KAAKF,GACdb,EAASc,GACThB,EAAW,CACTT,KAAM,GACNC,WAAY,KAEdW,EAAUe,QAAQC,QAClBhB,EAAUe,QAAQ9D,MAAQ,GAC1BiD,EAAgBa,QAAQ9D,MAAQ,GAXlC,4CA9D2D,sBA4E3D,SAASgC,EAAkBoC,GACzB,IAAMV,EAAS,YAAOb,GACtBa,EAAUW,OAAOD,EAAK,GACtBtB,EAASY,GAGX,SAASY,IACP,IAAMZ,EAAS,YAAOb,GAClB0B,EAAWb,EAAUW,QAAQ,EAAG,GACpCtB,EAAUe,QAAQ9D,MAAQuE,EAAS,GAAGpC,KACtCc,EAAgBa,QAAQ9D,MAAQuE,EAAS,GAAGnC,WAC5CQ,EAAW2B,EAAS,IACpBzB,EAASY,GAYX,SAASM,EAAWC,GACF,IAAZA,EAAEC,QACJD,EAAE/D,iBAtGqD,oCAuGvDiE,CAAcxB,IAuBlB,OAxGA6B,qBAAU,WACR2E,EAAc,CACZjK,IAAKD,EAAKC,IACVK,KAAMN,EAAKM,KACXkD,YAAaxD,EAAKwD,YAClB/D,KAAMO,EAAKP,OAEb,IAAMmE,EAAK,YAAO5D,EAAK4D,OACnBa,EAAS,YAAOb,GAChB0B,EAAWb,EAAUW,QAAQ,EAAG,GACpCtB,EAAUe,QAAQ9D,MAAQuE,EAAS,GAAGpC,KACtCc,EAAgBa,QAAQ9D,MAAQuE,EAAS,GAAGnC,WAC5CU,EAASY,GACTd,EAAW2B,EAAS,MACnB,IAuEHC,qBAAU,WACRtB,EAAQY,QAAQW,gBACZrB,GAAe,GACfA,GAAe,KAClB,CACD,CACEG,EACAA,EACAC,EACAc,KAIJE,qBAAU,WACa,KAAjB7B,EAAQR,MACViB,GAAe,KAEhB,CAAC,CAACY,KAGH,mCAEE,sBAAKxD,UAAU,kBAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,sBAAMA,UAAU,kBAAhB,oBACCxB,EAAWO,QAEd,sBAAKiB,UAAU,8BAAf,UACE,sBAAMA,UAAU,kBAAhB,2BACCxB,EAAWyD,eAEd,uBAAMhC,aAAa,MAAMmE,IAAK1B,EAASxC,SA/C7C,SAAsBb,GACpBA,EAAIK,iBACJ,IAAM0D,EAAQ,YAAOf,GACrBsG,EAAcnK,GACd4E,EAASC,KAAKlB,GACduG,EAAiBlK,EAAY4E,EAAU3E,EAAKC,KAC5CqD,EAAQsB,KAAK,WAyCT,UAEE,sBAAKrD,UAAU,kBAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,uBAAOA,UAAU,WAAjB,mBACA,uBAAOA,UAAU,WAAjB,6BAEF,sBAAKA,UAAU,gCAAf,UACE,0BACEK,UAAQ,EACRL,UAAU,eACVjB,KAAK,OACLoB,KAAK,OACLyI,aAAcpK,EAAWO,KACzBqB,SAAU4C,IAEZ,0BACE3C,UAAQ,EACRL,UAAU,eACVjB,KAAK,cACLoB,KAAK,OACLyI,aAAcpK,EAAWyD,YACzB7B,SAAU4C,UAMfX,EAAMgC,KAAI,SAACC,EAAGrB,GAAJ,OACT,cAACsF,GAAD,CACElH,KAAMiD,EACN/C,uBAAwBA,EACxBD,QAAS2B,EACTzB,kBAAmBA,OAKtBqB,EACC,sBAAK7C,UAAU,kBAAf,UAEoB,IAAjBqC,EAAMkC,OACL,6BAEA,qBACEvE,UAAU,6BACVmB,QAAS2C,EAFX,SAIE,sBAAM9D,UAAU,cAAhB,oBAKJ,sBAAKA,UAAU,6BAAf,UACE,uBAAOA,UAAU,WAAjB,mBACA,uBAAOA,UAAU,WAAjB,4BAEF,sBAAKA,UAAU,cAAf,UACE,0BACEK,UAAQ,EACRL,UAAU,eACVjB,KAAK,OACLoB,KAAK,OACLiE,IAAK7B,EACLnC,SAAU2C,IAEZ,0BACE1C,UAAQ,EACRL,UAAU,eACVjB,KAAK,aACLyF,UAAWhB,EACXrD,KAAK,OACLiE,IAAK3B,EACLrC,SAAU2C,OAGd,qBAAK/B,MAAO,CAAEyD,QAAS,QAAvB,4CAGF,6BAEF,yBACEzE,UAAU,6BACV0B,GAAG,kBACHpB,SAAUqC,EAHZ,oBAKUnE,EAAWO,gB,MChOhB,SAAS8J,GAAT,GAAoC,IAAlB3K,EAAiB,EAAjBA,KAAM2B,EAAW,EAAXA,QAMrC,OACE,sBAAKgH,MAAM,uDAAX,UACE,qBAAK7G,UAAU,sBAAf,SACE,cAAC,IAAD,CAAM8I,OAAK,EAAC5D,GAAG,SAAf,yBAIF,wBACE2B,MAAM,iBACN1G,KAAK,SACL4I,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMtC,MAAM,0BAEd,sBAAKA,MAAM,2BAA2BnF,GAAG,YAAzC,UACE,qBAAImF,MAAM,qBAAV,UACE,oBAAIA,MAAM,WAAV,SACE,cAAC,IAAD,CAAM7G,UAAU,WAAW8I,OAAK,EAAC5D,GAAG,SAApC,wBAIF,oBAAI2B,MAAM,WAAV,SACE,cAAC,IAAD,CAAM7G,UAAU,WAAW8I,OAAK,EAAC5D,GAAG,OAApC,2BAIF,oBAAI2B,MAAM,WAAV,SACE,cAAC,IAAD,CAAM7G,UAAU,WAAW8I,OAAK,EAAC5D,GAAG,UAApC,yBAKJ,uBAAMlF,UAAU,4BAAhB,sBAAsD9B,EAAKa,QAC3D,cAAC,IAAD,CAAMiB,UAAU,WAAWmB,QA1CjC,WvBmBA5D,aAAaU,WAAW,SuBjBtB4B,EAAQ,OAwCJ,2BC/CO,SAASuJ,KACtB,OACE,wBAAQpJ,UAAU,wCAAlB,uBCaW,SAASqJ,KAAO,IAAD,EACJ5I,mBAAShD,KADL,mBACrBS,EADqB,KACf2B,EADe,OAEFY,mBAAS,IAFP,mBAErB4E,EAFqB,KAEdiE,EAFc,iDAkB5B,WAA6BC,EAAaC,GAA1C,eAAAlN,EAAA,6DACEiN,EAAYlH,MAAQmH,EADtB,SAEwBC,EAAoBF,GAF5C,OAEQG,EAFR,OAGEJ,EAAS,GAAD,mBAAKjE,GAAL,CAAYqE,KAHtB,4CAlB4B,kEAwB5B,WAAgCC,EAAgBC,GAAhD,iBAAAtN,EAAA,6DACEqN,EAAetH,MAAQuH,EADzB,SAE2BH,EAAoBE,GAF/C,OAEQnL,EAFR,OAIEqL,GADIA,EAHN,YAGsBxE,IACEyE,QAAO,SAACC,GAAD,OAAOA,EAAErL,MAAQF,EAAWE,OACzD4K,EAAS,GAAD,mBAAKO,GAAL,CAAgBrL,KAL1B,4CAxB4B,kEAgC5B,WAA8BC,GAA9B,eAAAnC,EAAA,sEACQmN,EAAkBhL,GAD1B,OAIQuL,EAAa3E,EAAMhB,KAAI,SAAC0F,EAAGrI,GAI/B,OAHIqI,EAAErL,MAAQD,EAAKC,MACjBqL,EAAE9E,QAAU8E,EAAE9E,QAET8E,KAETT,EAASU,GAVX,4CAhC4B,+BA6CbrF,EA7Ca,8EA6C5B,WAAgClG,GAAhC,eAAAnC,EAAA,sEACQmN,EAAoBhL,GAD5B,uBAEyBgL,IAFzB,OAEQpB,EAFR,OAGEiB,EAASjB,GAHX,4CA7C4B,sBAmD5B,OA9CArE,qBACE,WAAY,4CACV,4BAAA1H,EAAA,0DACM4B,EADN,gCAE2BuL,IAF3B,OAEUpB,EAFV,OAGIiB,EAASjB,GAHb,4CADU,uBAAC,WAAD,wBAOV4B,KAEF,CAAC/L,IAqCD,sBAAMwD,GAAG,aAAa1B,UAAU,MAAhC,SACG9B,EACC,qCACE,cAAC,GAAD,CAAQA,KAAMA,EAAM2B,QAASA,IAC7B,cAAC,IAAD,UACE,sBAAKG,UAAU,iBAAf,UACE,cAAC,IAAD,CAAOkK,KAAK,OAAZ,SACE,cAACrI,EAAD,CAAaC,cA3DC,kDA6DhB,cAAC,IAAD,CAAOoI,KAAK,SAAZ,SACE,cAACxD,EAAD,CACExI,KAAMA,EACNmH,MAAOA,EACPV,iBAAkBA,EAClBE,eAlEY,gDAqEhB,cAAC,IAAD,CAAOqF,KAAK,QAAZ,SACE,cAACnD,EAAD,MAEF,cAAC,IAAD,CAAOmD,KAAK,QAAZ,SACE,cAACpC,GAAD,MAEF,cAAC,IAAD,CAAOoC,KAAK,QAAZ,SACE,cAACzB,GAAD,CACE9D,iBAAkBA,EAClB+D,iBA9EY,kDAiFhB,cAAC,IAAD,CAAOwB,KAAK,UAAZ,SACE,cAAChC,GAAD,CAAiBhK,KAAMA,MAEzB,cAAC,IAAD,CAAUgH,GAAG,gBAGjB,cAACkE,GAAD,OAGF,cAAC,EAAD,CAAUvJ,QAASA,MCnG3BsK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.e2dd4349.chunk.js","sourcesContent":["import { getToken } from './users-service';\n\nconst BASE_URL = '/api/users';\n\nexport function signUp(userData) {\n  return sendRequest(BASE_URL, 'POST', userData);\n}\n\nexport function login(credentials) {\n  return sendRequest(`${BASE_URL}/login`, 'POST', credentials);\n}\n\n// Again, this is for testing purposes only, you don't need it\nexport function checkToken() {\n  return sendRequest(`${BASE_URL}/check-token`);\n}\n\n/*--- Helper Functions ---*/\n\nasync function sendRequest(url, method = 'GET', payload = null) {\n  // Fetch takes an optional options object as the 2nd argument\n  // used to include a data payload, set headers, etc. \n  const options = { method };\n  if (payload) {\n    options.headers = { 'Content-Type': 'application/json' };\n    options.body = JSON.stringify(payload);\n  }\n  // Add the token\n  const token = getToken();\n  if (token) {\n    // Ensure the headers object exists\n    options.headers = options.headers || {};\n    options.headers.Authorization = `Bearer ${token}`;\n  }\n  const res = await fetch(url, options);\n  // res.ok will be false if the status code set to 4xx in the controller action\n  if (res.ok) return res.json();\n  throw new Error('Bad Request');\n}","import * as usersAPI from './users-api';\n\nexport async function signUp(userData) {\n  try {\n    const token = await usersAPI.signUp(userData);\n    // Persist the token\n    localStorage.setItem('token', token);\n    return getUser();\n  } catch {\n    throw new Error('Invalid Sign Up');\n  }\n}\nexport async function login(credentials) {\n  try {\n    const token = await usersAPI.login(credentials);\n    // Persist the token\n    localStorage.setItem('token', token);\n    return getUser();\n  } catch {\n    throw new Error('Invalid Login');\n  }\n}\n\nexport function logOut() {\n  localStorage.removeItem('token');\n}\n\nexport function getToken() {\n  // getItem returns null if there's no string\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  // Check if expired, remove if it is\n  const payload = JSON.parse(atob(token.split('.')[1]));\n  // A JWT's exp is expressed in seconds, not milliseconds, so convert\n  if (payload.exp < Date.now() / 1000) {\n    localStorage.removeItem('token');\n    return null;\n  }\n  return token;\n}\n\nexport function getUser() {\n  const token = getToken();\n  // If there's a token, return the user in the payload, otherwise return null\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n","import { getToken } from './users-service'\n\nexport default async function sendRequest(url, method = 'GET', payload = null) {\n    // Fetch takes an optional options object as the 2nd argument\n    // used to include a data payload, set headers, etc. \n    const options = { method };\n    if (payload) {\n      options.headers = { 'Content-Type': 'application/json' };\n      options.body = JSON.stringify(payload);\n    }\n    // Add a token\n    const token = getToken();\n    if (token) {\n      // Ensures that the headers object exists\n      options.headers = options.headers || {};\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n    const res = await fetch(url, options);\n    console.log(res)\n    // res.ok will be false if the status code set to 4xx in the controller action\n    if (res.ok) return res.json();\n    throw new Error('Bad Request');\n  }","import sendRequest from './send-request';\n\nconst BASE_URL = 'api/decks';\n\n// get all decks from mongoose documents\nexport function getAll() {\n    return sendRequest(BASE_URL);\n}\n\nexport function addCards(deck, cardsData) {\n    return sendRequest(`${BASE_URL}/${deck._id}/addCards`, 'PUT', cardsData)\n}\n\nexport function createDeck(deckData) {\n    return sendRequest(BASE_URL, \"POST\", deckData);\n}\n\nexport function updateDeck(deck) {\n    return sendRequest(`${BASE_URL}/${deck._id}`, \"PUT\", deck);\n}\n\nexport function showDeck(deck) {\n    return sendRequest(`${BASE_URL}/${deck._id}`, \"GET\", deck);\n}\n\nexport function deleteDeck(deck) {\n    return sendRequest(`${BASE_URL}/${deck._id}`, \"DELETE\");\n}\n\nexport function hideDeck(deck) {\n    return sendRequest(`${BASE_URL}/${deck._id}/hide`, \"PUT\");\n}\n","import { Component } from \"react\";\nimport { signUp } from \"../../utilities/users-service\";\n\nexport default class SignUpForm extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    error: \"\",\n  };\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n      error: \"\",\n    });\n  };\n\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n    try {\n      const formData = { ...this.state };\n      delete formData.error;\n      delete formData.confirm;\n      const user = await signUp(formData);\n      this.props.setUser(user);\n    } catch {\n      // An error occurred\n      this.setState({ error: \"Sign Up Failed - Try Again\" });\n    }\n  };\n\n  render() {\n    const disable = this.state.password !== this.state.confirm;\n    return (\n      <div>\n        <div className=\"form-container\">\n          <p className=\"error-message\">&nbsp;{this.state.error}</p>\n          <form\n            className=\"form-auth\"\n            autoComplete=\"off\"\n            onSubmit={this.handleSubmit}\n          >\n            <label className=\"label-auth\">Name</label>\n            <input\n              className=\"input-auth\"\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              required\n            />\n            <label className=\"label-auth\">Email</label>\n            <input\n              className=\"input-auth\"\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              required\n            />\n            <label className=\"label-auth\">Password</label>\n            <input\n              className=\"input-auth\"\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              required\n            />\n            <label className=\"label-auth\">Confirm</label>\n            <input\n              className=\"input-auth\"\n              type=\"password\"\n              name=\"confirm\"\n              value={this.state.confirm}\n              onChange={this.handleChange}\n              required\n            />\n            <button className=\"button-auth\" type=\"submit\" disabled={disable}>\n              SIGN UP\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import { useState } from \"react\";\nimport * as usersService from \"../../utilities/users-service\";\n\nexport default function LogIn({ setUser }) {\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [error, setError] = useState(\"\");\n\n  function handleChange(evt) {\n    setCredentials({ ...credentials, [evt.target.name]: evt.target.value });\n    setError(\"\");\n  }\n\n  async function handleSubmit(evt) {\n    // Prevent form from being submitted to the server\n    evt.preventDefault();\n    try {\n      // The promise returned by the signUp service method\n      // will resolve to the user object included in the\n      // payload of the JSON Web Token (JWT)\n      const user = await usersService.login(credentials);\n      setUser(user);\n    } catch {\n      setError(\"Log In Failed - Try Again\");\n    }\n  }\n\n  return (\n    <>\n      {error !== \"\" ? <p className=\"error-message\">&nbsp;{error}</p> : <></>}\n      <div>\n        <div className=\"form-container\" onSubmit={handleSubmit}>\n          <form className=\"form-auth\" autoComplete=\"off\">\n            <label className=\"label-auth\">Email</label>\n            <input\n              className=\"input-auth\"\n              type=\"text\"\n              name=\"email\"\n              value={credentials.email}\n              onChange={handleChange}\n              required\n            />\n            <label className=\"label-auth\">Password</label>\n            <input\n              className=\"input-auth\"\n              type=\"password\"\n              name=\"password\"\n              value={credentials.password}\n              onChange={handleChange}\n              required\n            />\n            <button className=\"button-auth\" type=\"submit\">\n              LOG IN\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport SignUpForm from \"../../components/SignUpForm/SignUpForm\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\nimport \"./AuthPage.css\";\n\nexport default function AuthPage({ setUser }) {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <main>\n      <div className=\"container-main no-padding\" style={{ width: \"100%\" }}>\n        <div className=\"auth-grid\">\n          <div className=\"auth-title\">\n            <h1 className=\"big-txt\" style={{ fontSize: \"4rem\" }}>\n              SnapFlash\n            </h1>\n            <p className=\"auth-description\" style={{ fontSize: \"1.6rem\" }}>\n              simple flashcards made simple.\n            </p>\n          </div>\n          <div className=\"ctr-line dk-bg-1\"></div>\n          <div className=\"auth-registration lt-bg-1 bdr-radius auth-reg-grid shdo-dk\">\n            <div className=\"flx-spc-ard\">\n              {showLogin ? (\n                <div className=\"flex-down\">\n                  <>\n                    <LoginForm setUser={setUser} />\n                    <button\n                      className=\"auth-form-switch\"\n                      onClick={() => setShowLogin(!showLogin)}\n                    >\n                      {showLogin ? \"SIGN UP\" : \"LOG IN\"}\n                    </button>\n                  </>\n                </div>\n              ) : (\n                <div className=\"flex-down\">\n                  <>\n                    <SignUpForm setUser={setUser} />\n                    <button\n                      className=\"auth-form-switch\"\n                      onClick={() => setShowLogin(!showLogin)}\n                    >\n                      {showLogin ? \"SIGN UP\" : \"LOG IN\"}\n                    </button>\n                  </>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"align-center\"></div>\n        </div>\n      </div>\n    </main>\n  );\n}\n","export default function AddCard({\n  card,\n  cardKey,\n  handleCardsInputChange,\n  handleCardsDelete,\n}) {\n  function handleChangeWithKey(evt) {\n    handleCardsInputChange(evt, cardKey);\n  }\n\n  function handleDeleteCardWithKey(evt) {\n    handleCardsDelete(cardKey);\n  }\n\n  return (\n    <>\n      <div id={cardKey}>\n        <div className=\"shdo-dk lt-bg-1\">\n          <div className=\"card-number\">#{cardKey + 1}</div>\n          <div\n            className=\"disable-select delete-deck\"\n            onClick={handleDeleteCardWithKey}\n          >\n            <span className=\"delete-anim\">×</span>\n          </div>\n          <div className=\"flx-spc-ard input-area-top\">\n            <label className=\"txt-left\">Word:</label>\n            <label className=\"txt-left\">Definition:</label>\n          </div>\n          <div className=\"flx-spc-ard input-area-bottom\">\n            <textarea\n              required\n              className=\"flx-item-big\"\n              type=\"text\"\n              onChange={handleChangeWithKey}\n              name=\"word\"\n              value={card.word}\n            />\n            <textarea\n              required\n              className=\"flx-item-big\"\n              type=\"text\"\n              onChange={handleChangeWithKey}\n              name=\"definition\"\n              value={card.definition}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useState, useRef, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AddCard from \"../../components/AddCard/AddCard\";\n\nexport default function NewDeckPage({ handleAddDeck }) {\n  const history = useHistory();\n  const [deck, setDeck] = useState({\n    name: \"\",\n    description: \"\",\n  });\n  const [newCard, setNewCard] = useState({\n    word: \"\",\n    definition: \"\",\n  });\n  const [cards, setCards] = useState([]);\n\n  const wordInput = useRef();\n  const definitionInput = useRef();\n  const formRef = useRef();\n  const [invalidForm, setInvalidForm] = useState(true);\n  const [addingNewCard, setAddingNewCard] = useState(true);\n\n  function handleCardInputChange(evt) {\n    setNewCard({\n      ...newCard,\n      [evt.target.name]: evt.target.value,\n    });\n  }\n\n  function handleDeckInputChange(evt) {\n    setDeck({\n      ...deck,\n      [evt.target.name]: evt.target.value,\n    });\n  }\n\n  function handleCardsInputChange(evt, idx) {\n    const dupeCards = [...cards];\n    dupeCards[idx][evt.target.name] = evt.target.value;\n    setCards(dupeCards);\n  }\n\n  async function handleAddCard(newCardData) {\n    await setAddingNewCard(true);\n    const cardsArr = [...cards];\n    cardsArr.push(newCardData);\n    setCards(cardsArr);\n    setNewCard({\n      word: \"\",\n      definition: \"\",\n    });\n    wordInput.current.focus();\n    wordInput.current.value = \"\";\n    definitionInput.current.value = \"\";\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const cardsArr = [...cards];\n    cardsArr.push(newCard);\n    handleAddDeck(deck, cardsArr);\n    history.push(\"/decks\");\n  }\n\n  function checkIfTab(e) {\n    if (e.which === 9) {\n      e.preventDefault();\n      handleAddCard(newCard);\n    }\n  }\n\n  function handleCardsDelete(key) {\n    const dupeCards = [...cards];\n    dupeCards.splice(key, 1);\n    setCards(dupeCards);\n  }\n\n  function handleDeleteCard() {\n    const dupeCards = [...cards];\n    let lastCard = dupeCards.splice(-1, 1);\n\n    wordInput.current.value = lastCard[0].word;\n    definitionInput.current.value = lastCard[0].definition;\n    setNewCard(lastCard[0]);\n    setCards(dupeCards);\n  }\n\n  useEffect(() => {\n    formRef.current.checkValidity()\n      ? setInvalidForm(false)\n      : setInvalidForm(true);\n  }, [\n    [\n      handleCardInputChange,\n      handleCardInputChange,\n      handleDeckInputChange,\n      handleDeleteCard,\n    ],\n  ]);\n\n  useEffect(() => {\n    if (newCard.word === \"\") {\n      setInvalidForm(true);\n    }\n  }, [[checkIfTab]]);\n\n  return (\n    <>\n      {/* HeaderText */}\n      <div className=\"container md-bg\">\n        <div className=\"big-txt txt-white txt-left\">\n          <span className=\"md-txt-2 txt-dk\">Name: </span>\n          {deck.name === \"\" ? (\n            <span style={{ opacity: \"50%\", fontStyle: \"italic\" }}>newDeck</span>\n          ) : (\n            <span>{deck.name}</span>\n          )}\n        </div>\n        <div className=\"md-txt-2 txt-white txt-left\">\n          <span className=\"md-txt-1 txt-dk\">Description: </span>\n          {deck.description === \"\" ? (\n            <span style={{ opacity: \"50%\", fontStyle: \"italic\" }}>\n              desciption\n            </span>\n          ) : (\n            <span>{deck.description}</span>\n          )}\n        </div>\n\n        {/* ----------------Form */}\n        {/* form descriptors */}\n        <form autoComplete=\"off\" ref={formRef} onSubmit={handleSubmit}>\n          <div className=\"shdo-dk lt-bg-2\">\n            <div className=\"flx-spc-ard input-area-top\">\n              <label className=\"txt-left\">Name:</label>\n              <label className=\"txt-left\">Description:</label>\n            </div>\n            <div className=\"flx-spc-ard input-area-bottom\">\n              <textarea\n                required\n                className=\"flx-item-big\"\n                name=\"name\"\n                type=\"text\"\n                onChange={handleDeckInputChange}\n              />\n              <textarea\n                required\n                className=\"flx-item-big\"\n                name=\"description\"\n                type=\"text\"\n                onChange={handleDeckInputChange}\n              />\n            </div>\n          </div>\n\n          {/*----------  ---- Cards */}\n          {cards.map((c, idx) => (\n            <AddCard\n              card={c}\n              handleCardsInputChange={handleCardsInputChange}\n              cardKey={idx}\n              handleCardsDelete={handleCardsDelete}\n            />\n          ))}\n\n          {/*--------------- AddNewCard */}\n          {addingNewCard ? (\n            <>\n              <div className=\"shdo-dk lt-bg-1\">\n                {/* If the card deck is empty, cant delete the new card input */}\n                {cards.length === 0 ? (\n                  <></>\n                ) : (\n                  <div\n                    className=\"disable-select delete-deck\"\n                    onClick={handleDeleteCard}\n                  >\n                    <span className=\"delete-anim\">×</span>\n                  </div>\n                )}\n                <div className=\"flx-spc-ard input-area-top\">\n                  <label className=\"txt-left\">Word:</label>\n                  <label className=\"txt-left\">Definition:</label>\n                </div>\n                <div className=\"flx-spc-ard\">\n                  <textarea\n                    required\n                    className=\"flx-item-big\"\n                    name=\"word\"\n                    type=\"text\"\n                    ref={wordInput}\n                    onChange={handleCardInputChange}\n                  />\n                  <textarea\n                    required\n                    className=\"flx-item-big\"\n                    name=\"definition\"\n                    onKeyDown={(e) => checkIfTab(e)}\n                    type=\"text\"\n                    ref={definitionInput}\n                    onChange={handleCardInputChange}\n                  />\n                </div>\n                <div style={{ padding: \"1rem\" }}>\n                  Press Tab to add a new Card\n                </div>\n              </div>\n            </>\n          ) : (\n            <></>\n          )}\n          <button\n            className=\"lt-bg-1 bdr-radius shdo-dk\"\n            id=\"add-deck-button\"\n            disabled={invalidForm}\n          >\n            Add New Deck\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport \"./Deck.css\";\n\nexport default function Deck({\n  deck,\n  handleDeleteDeck,\n  currentUser,\n  handleHideDeck,\n}) {\n  function deleteDeck(evt) {\n    handleDeleteDeck(deck);\n  }\n\n  function hideDeck(evt) {\n    handleHideDeck(deck);\n  }\n\n  return (\n    <>\n      <div\n        className=\"card shdo-dk\"\n        id=\"card-attributes\"\n        style={{ width: \"17rem\", justifySelf: \"center\" }}\n      >\n        {currentUser._id === deck.user ? (\n          <span className=\"disable-select delete-deck\" onClick={deleteDeck}>\n            ×\n          </span>\n        ) : (\n          <></>\n        )}\n        <div className=\"card-head lt-bg-1\">\n          <div className=\"md-txt-3\">{deck.name}</div>\n          <span>\n            Created By: <span style={{ color: \"blue\" }}>{deck.userName}</span>\n          </span>\n        </div>\n        <div className=\"card-body wt-bg md-txt-1\">\n          <div>{deck.description}</div>\n        </div>\n        {currentUser._id === deck.user ? (\n          <>\n            <button\n              className={deck.hidden ? \"hidden\" : \"nothidden\"}\n              onClick={hideDeck}\n            >\n              {\" \"}\n              {deck.hidden ? \"Make Public\" : \"Make Private\"}{\" \"}\n            </button>\n            <div className=\"deck-buttons three-buts txt-white-a\">\n              <Link\n                className=\"cardl lt-bg-3 txt-white md-txt-1\"\n                to={{ pathname: `/edit`, state: { deck } }}\n              >\n                Update\n              </Link>\n              <Link\n                className=\"cardl lt-bg-2 md-txt-1\"\n                to={{ pathname: \"/list\", state: { deck } }}\n              >\n                Study\n              </Link>\n              <Link\n                className=\"cardl lt-bg-3 md-txt-1\"\n                to={{ pathname: \"/flip\", state: { deck } }}\n              >\n                Flip\n              </Link>\n            </div>\n          </>\n        ) : (\n          <div className=\"deck-buttons two-buts txt-white-a\">\n            <Link\n              className=\"cardl lt-bg-2\"\n              to={{ pathname: \"/list\", state: { deck } }}\n            >\n              Study\n            </Link>\n            <Link\n              className=\"cardl lt-bg-3\"\n              to={{ pathname: \"/flip\", state: { deck } }}\n            >\n              Flip\n            </Link>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","import Deck from \"../Deck/Deck\";\nimport { Link } from \"react-router-dom\";\nimport \"./DecksListContainer.css\";\n\nexport default function DecksListContainer({\n  decks,\n  handleDeleteDeck,\n  user,\n  handleHideDeck,\n}) {\n  const deck = decks.map((i, idx) => {\n    return (\n      <Deck\n        key={i._id}\n        deck={i}\n        handleDeleteDeck={handleDeleteDeck}\n        currentUser={user}\n        handleHideDeck={handleHideDeck}\n      />\n    );\n  });\n\n  return (\n    <>\n      <div className=\"container md-bg\">\n        <div className=\"big-txt txt-white\">My Decks</div>\n        <div className=\"card-grid\">\n          <div\n            className=\"card shdo-dk lt-bg-1\"\n            id=\"card-attributes\"\n            style={{ width: \"17rem\", justifySelf: \"center\" }}\n          >\n            <div className=\"flx-ctr-down\" style={{ background: \"#ffb997\" }}>\n              <Link\n                className=\"lt-bg-1 big-txt txt-dk\"\n                to={{ pathname: \"/new\" }}\n              >\n                Create a Deck\n                <div className=\"big-txt\" txt-dk>\n                  +\n                </div>\n              </Link>\n            </div>\n          </div>\n          {deck}\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect, useRef } from \"react\";\n\nexport default function Quote() {\n  const [quote, setQuote] = useState(\"\");\n  const timerRef = useRef();\n  const [quoteAnim, setQuoteAnim] = useState(\"quote-anim\");\n\n  //set initial fun smart people quote!\n  useEffect(function () {\n    async function fetchFirst() {\n      await fetch(\"https://type.fit/api/quotes\")\n        .then(function (response) {\n          return response.json();\n        })\n        .then(function (data) {\n          setQuote(data[Math.floor(Math.random() * 1600)]);\n        });\n    }\n    fetchFirst();\n  }, []);\n\n  //update quote!\n  useEffect(function () {\n    timerRef.current = setInterval(function () {\n      setQuoteAnim(\"\");\n      fetch(\"https://type.fit/api/quotes\")\n        .then(function (response) {\n          return response.json();\n        })\n        .then(function (data) {\n          setQuote(data[Math.floor(Math.random() * 1600)]);\n          setQuoteAnim(\"quote-anim\");\n        });\n    }, 5000);\n    return function () {\n      clearInterval(timerRef.current);\n    };\n  }, []);\n\n  return (\n    <div className={`quote-container ${quoteAnim}`}>\n      <p>{quote.text}</p>\n      {!quote.author ? <p>-Author unknown</p> : <p>-{quote.author}</p>}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport DecksListContainer from \"../../components/DecksListContainer/DecksListContainer\";\nimport Quote from \"../../components/Quote/Quote\";\n\nexport default function DecksListPage({\n  decks,\n  handleDeleteDeck,\n  user,\n  handleHideDeck,\n}) {\n  return (\n    <>\n      <Quote></Quote>\n      {/* <div className=\"quote-container\">\n        <p>{quote.text}</p>\n        { quote.author==='' ?\n        <p>-author unknown</p>\n        :\n        <p>-{quote.author}</p>\n      }\n      </div> */}\n      <DecksListContainer\n        decks={decks}\n        handleDeleteDeck={handleDeleteDeck}\n        user={user}\n        handleHideDeck={handleHideDeck}\n      />\n    </>\n  );\n}\n","export default function Card({card}) {\n    \n    return (\n        <div className=\"flex-ctr-ctr-cards align-ctr cards-container shdo-dk\" style={{margin:'3rem auto', width:'80%'}}>\n            <div class=\"card-front shdo-dk\">\n                <div class=\"card-inner\">\n                    <div class=\"cards-front\">\n                        <div className=\"flex-ctr-ctr card-content\">{card.word}</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-back shdo-dk\">\n                <div class=\"card-inner\">\n                    <div class=\"cards-front\">\n                        <div className=\"flex-ctr-ctr card-content\">{card.definition}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import Card from \"../Card/Card\";\n\nexport default function CardListContainer({ deck }) {\n  let card = deck.cards.map((c) => {\n    return <Card card={c} />;\n  });\n\n  return <>{card}</>;\n}\n","import { useLocation } from \"react-router-dom\";\nimport CardListContainer from \"../../components/CardListContainer/CardListContainer\";\n\nexport default function CardsListViewPage() {\n  const location = useLocation();\n\n  const {\n    state: { deck },\n  } = useLocation();\n\n  return (\n    <>\n      <h1>{deck.name}</h1>\n      <h3>{deck.description}</h3>\n      <CardListContainer location={location} deck={deck} />\n    </>\n  );\n}\n","import './CardFlip.css'\n\nexport default function CardFlip({currentCard, cardIdx}) {\n    \n    return (\n        <div className=\"flex-ctr-ctr align-ctr\">\n            <div class=\"flip-card\">\n                <div class=\"flip-card-inner\">\n                    <div class=\"flip-card-front\">\n                        <div className=\"card-index\">{cardIdx}</div>\n                        <div className=\"flex-ctr-ctr card-content\">{currentCard.word}</div>\n                    </div>\n                    <div class=\"flip-card-back\">\n                        <div className=\"flex-ctr-ctr card-content\">{currentCard.definition}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useState } from \"react\";\n\nimport CardFlip from \"../../components/CardFlip/CardFlip\";\n\nexport default function FlipViewContainer({ deck }) {\n  const [currentCard, setCurrentCard] = useState(deck.cards[0]);\n  const [cardIdx, setCardIdx] = useState(1);\n\n  function HandleChangeCard(evt) {\n    let deckSize = deck.cards.length;\n    let startingCard = currentCard;\n    let whereAmI = deck.cards.indexOf(startingCard);\n\n    if (evt.target.innerHTML === \"Previous\") {\n      whereAmI -= 1;\n      if (whereAmI < 0) {\n        whereAmI = deckSize - 1;\n      }\n    }\n    if (evt.target.innerHTML === \"Next\") {\n      whereAmI += 1;\n      if (deck.cards[deckSize - 1]._id === startingCard._id) {\n        whereAmI = 0;\n      }\n    }\n    setCardIdx(whereAmI + 1);\n    setCurrentCard(deck.cards[whereAmI]);\n  }\n\n  return (\n    <>\n      <CardFlip currentCard={currentCard} cardIdx={cardIdx} />\n      <span id=\"butt-grid\">\n        <button className=\"butt\" onClick={HandleChangeCard}>\n          Previous\n        </button>\n        <button className=\"butt\" onClick={HandleChangeCard}>\n          Next\n        </button>\n      </span>\n    </>\n  );\n}\n","import { useLocation } from \"react-router-dom\";\nimport FlipViewContainer from \"../../components/FlipViewContainer/FlipViewContainer\";\n\nexport default function CardsFlipViewPage() {\n  const {\n    state: { deck },\n  } = useLocation();\n\n  return (\n    <>\n      <div className=\"center-on-page\">\n        <div\n          className=\"lt-bg-3 bdr-radius shdo-dk\"\n          style={{ width: \"60%\", padding: \"1rem\", margin: \"auto\" }}\n        >\n          <div className=\"md-txt-3\">{deck.name}</div>\n          <div className=\"md-txt-2\">Description: {deck.description}</div>\n          <div className=\"md-txt-1\">\n            Created By: <span style={{ color: \"azure\" }}>{deck.userName}</span>\n          </div>\n        </div>\n        <FlipViewContainer deck={deck} />\n      </div>\n    </>\n  );\n}\n","// import {useState} from 'react';\nimport Deck from \"../Deck/Deck\";\n\nexport default function SearchDecksContainer({ otherDecks, user }) {\n  const deck = otherDecks.map((i, idx) => {\n    return <Deck key={i._id} deck={i} currentUser={user} />;\n  });\n\n  return (\n    <div className=\"container md-bg\">\n      <div className=\"txt-white big-txt\">Other Users Decks</div>\n      <div className=\"card-grid\">{deck}</div>\n    </div>\n  );\n}\n","import sendRequest from './send-request';\n\nconst BASE_URL = 'api/search';\n\n// get all decks from mongoose documents\nexport function getAllOtherDecks() {\n    return sendRequest(BASE_URL);\n}","import { useEffect, useState } from \"react\";\nimport SearchDecksContainer from \"../../components/SearchDecksContainer/SearchDecksContainer\";\nimport * as searchAPI from \"../../utilities/search-api\";\n\nexport default function SearchDecksPage({ user }) {\n  const [otherDecks, setOtherDecks] = useState([]);\n\n  useEffect(function () {\n    async function getOtherDecks() {\n      const decksObj = await searchAPI.getAllOtherDecks();\n      setOtherDecks(decksObj);\n    }\n    getOtherDecks();\n  }, []);\n\n  return (\n    <>\n      <SearchDecksContainer otherDecks={otherDecks} user={user} />\n    </>\n  );\n}\n","export default function UpdateCard({\n  card,\n  cardKey,\n  handleCardsInputChange,\n  handleCardsDelete,\n}) {\n  function handleChangeWithKey(evt) {\n    handleCardsInputChange(evt, cardKey);\n  }\n\n  function handleDeleteCardWithKey() {\n    handleCardsDelete(cardKey);\n  }\n\n  return (\n    <>\n      <div id={cardKey}>\n        <div className=\"shdo-dk lt-bg-1\">\n          <div className=\"card-number\">#{cardKey + 1}</div>\n          <div\n            className=\"disable-select delete-deck\"\n            onClick={handleDeleteCardWithKey}\n          >\n            <span className=\"delete-anim\">×</span>\n          </div>\n          <div className=\"flx-spc-ard input-area-top\">\n            <label className=\"txt-left\" htmlFor=\"\">\n              Word:\n            </label>\n            <label className=\"txt-left\" htmlFor=\"\">\n              Definition:\n            </label>\n          </div>\n          <div className=\"flx-spc-ard input-area-bottom\">\n            <textarea\n              className=\"flx-item-big\"\n              type=\"text\"\n              onChange={handleChangeWithKey}\n              name=\"word\"\n              value={card.word}\n            />\n            <textarea\n              className=\"flx-item-big\"\n              type=\"text\"\n              onChange={handleChangeWithKey}\n              name=\"definition\"\n              value={card.definition}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useEffect, useState, useRef } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport UpdateCard from \"../../components/UpdateCard/UpdateCard\";\n\nexport default function UpdateDeckPage({ handleUpdateDeck }) {\n  let history = useHistory();\n\n  const [updateDeck, setUpdateDeck] = useState({\n    name: \"\",\n    description: \"\",\n  });\n  const [newCard, setNewCard] = useState({\n    word: \"\",\n    definition: \"\",\n  });\n  const [cards, setCards] = useState([]);\n  const {\n    state: { deck },\n  } = useLocation();\n  const wordInput = useRef();\n  const definitionInput = useRef();\n  const formRef = useRef();\n  const [invalidForm, setInvalidForm] = useState(false);\n  const [addingNewCard, setAddingNewCard] = useState(true);\n\n  // This unpacks the deck to set initial values\n  useEffect(() => {\n    setUpdateDeck({\n      _id: deck._id,\n      name: deck.name,\n      description: deck.description,\n      user: deck.user,\n    });\n    const cards = [...deck.cards];\n    let dupeCards = [...cards];\n    let lastCard = dupeCards.splice(-1, 1);\n    wordInput.current.value = lastCard[0].word;\n    definitionInput.current.value = lastCard[0].definition;\n    setCards(dupeCards);\n    setNewCard(lastCard[0]);\n  }, []);\n\n  //handles the input name of the new deck\n  function handleDeckInputChange(evt) {\n    setUpdateDeck({\n      ...updateDeck,\n      [evt.target.name]: evt.target.value,\n    });\n  }\n\n  //handles the input change of the newest card\n  function handleCardInputChange(evt) {\n    setNewCard({\n      ...newCard,\n      [evt.target.name]: evt.target.value,\n    });\n  }\n\n  //handles the input change of the rest of the cards\n  function handleCardsInputChange(evt, idx) {\n    const dupeCards = [...cards];\n    dupeCards[idx][evt.target.name] = evt.target.value;\n    setCards(dupeCards);\n  }\n\n  //adds new card to the deck of cards, resets new card\n  async function handleAddCard(newCardData) {\n    await setAddingNewCard(true);\n    const cardsArr = [...cards];\n    cardsArr.push(newCardData);\n    setCards(cardsArr);\n    setNewCard({\n      word: \"\",\n      definition: \"\",\n    });\n    wordInput.current.focus();\n    wordInput.current.value = \"\";\n    definitionInput.current.value = \"\";\n  }\n\n  function handleCardsDelete(key) {\n    const dupeCards = [...cards];\n    dupeCards.splice(key, 1);\n    setCards(dupeCards);\n  }\n\n  function handleDeleteCard() {\n    const dupeCards = [...cards];\n    let lastCard = dupeCards.splice(-1, 1);\n    wordInput.current.value = lastCard[0].word;\n    definitionInput.current.value = lastCard[0].definition;\n    setNewCard(lastCard[0]);\n    setCards(dupeCards);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const cardsArr = [...cards];\n    setUpdateDeck(updateDeck);\n    cardsArr.push(newCard);\n    handleUpdateDeck(updateDeck, cardsArr, deck._id);\n    history.push(\"/decks\");\n  }\n\n  function checkIfTab(e) {\n    if (e.which === 9) {\n      e.preventDefault();\n      handleAddCard(newCard);\n    }\n  }\n\n  useEffect(() => {\n    formRef.current.checkValidity()\n      ? setInvalidForm(false)\n      : setInvalidForm(true);\n  }, [\n    [\n      handleCardInputChange,\n      handleCardInputChange,\n      handleDeckInputChange,\n      handleDeleteCard,\n    ],\n  ]);\n\n  useEffect(() => {\n    if (newCard.word === \"\") {\n      setInvalidForm(true);\n    }\n  }, [[checkIfTab]]);\n\n  return (\n    <>\n      {/* --------------Header */}\n      <div className=\"container md-bg\">\n        <div className=\"big-txt txt-white txt-left\">\n          <span className=\"md-txt-2 txt-dk\">Name: </span>\n          {updateDeck.name}\n        </div>\n        <div className=\"md-txt-2 txt-white txt-left\">\n          <span className=\"md-txt-1 txt-dk\">Description: </span>\n          {updateDeck.description}\n        </div>\n        <form autoComplete=\"off\" ref={formRef} onSubmit={handleSubmit}>\n          {/* ------------------DeckInput */}\n          <div className=\"shdo-dk lt-bg-2\">\n            <div className=\"flx-spc-ard input-area-top\">\n              <label className=\"txt-left\">Name:</label>\n              <label className=\"txt-left\">Description:</label>\n            </div>\n            <div className=\"flx-spc-ard input-area-bottom\">\n              <textarea\n                required\n                className=\"flx-item-big\"\n                name=\"name\"\n                type=\"text\"\n                defaultValue={updateDeck.name}\n                onChange={handleDeckInputChange}\n              />\n              <textarea\n                required\n                className=\"flx-item-big\"\n                name=\"description\"\n                type=\"text\"\n                defaultValue={updateDeck.description}\n                onChange={handleDeckInputChange}\n              />\n            </div>\n          </div>\n\n          {/* -------------------CardsInput */}\n          {cards.map((c, idx) => (\n            <UpdateCard\n              card={c}\n              handleCardsInputChange={handleCardsInputChange}\n              cardKey={idx}\n              handleCardsDelete={handleCardsDelete}\n            />\n          ))}\n\n          {/* --------------------Delete display */}\n          {addingNewCard ? (\n            <div className=\"shdo-dk lt-bg-1\">\n              {/* If the card deck is empty, cant delete the new card input */}\n              {cards.length === 0 ? (\n                <></>\n              ) : (\n                <div\n                  className=\"disable-select delete-deck\"\n                  onClick={handleDeleteCard}\n                >\n                  <span className=\"delete-anim\">×</span>\n                </div>\n              )}\n\n              {/* ------------------NewCardInput */}\n              <div className=\"flx-spc-ard input-area-top\">\n                <label className=\"txt-left\">Word:</label>\n                <label className=\"txt-left\">Definition:</label>\n              </div>\n              <div className=\"flx-spc-ard\">\n                <textarea\n                  required\n                  className=\"flx-item-big\"\n                  name=\"word\"\n                  type=\"text\"\n                  ref={wordInput}\n                  onChange={handleCardInputChange}\n                />\n                <textarea\n                  required\n                  className=\"flx-item-big\"\n                  name=\"definition\"\n                  onKeyDown={checkIfTab}\n                  type=\"text\"\n                  ref={definitionInput}\n                  onChange={handleCardInputChange}\n                />\n              </div>\n              <div style={{ padding: \"1rem\" }}>Press Tab to add a new Card</div>\n            </div>\n          ) : (\n            <></>\n          )}\n          <button\n            className=\"lt-bg-1 bdr-radius shdo-dk\"\n            id=\"add-deck-button\"\n            disabled={invalidForm}\n          >\n            Update {updateDeck.name}\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport * as userService from \"../../utilities/users-service\";\nimport \"./NavBar.css\";\n\nexport default function NavBar({ user, setUser }) {\n  function handleLogOut() {\n    userService.logOut();\n    setUser(null);\n  }\n\n  return (\n    <nav class=\"navbar navbar-expand-lg navbar-light lt-bg-1 shdo-dk\">\n      <div className=\"navbar-brand txt-dk\">\n        <Link exact to=\"/decks\">\n          SnapFlash\n        </Link>\n      </div>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item\">\n            <Link className=\"nav-link\" exact to=\"/decks\">\n              My Decks\n            </Link>\n          </li>\n          <li class=\"nav-item\">\n            <Link className=\"nav-link\" exact to=\"/new\">\n              Create Deck\n            </Link>\n          </li>\n          <li class=\"nav-item\">\n            <Link className=\"nav-link\" exact to=\"/search\">\n              Search\n            </Link>\n          </li>\n        </ul>\n        <span className=\"navbar-text toggle-hidden\">Welcome, {user.name}</span>\n        <Link className=\"nav-link\" onClick={handleLogOut}>\n          Log Out\n        </Link>\n      </div>\n    </nav>\n  );\n}\n","export default function Footer() {\n  return (\n    <footer className=\"page-footer txt-right lt-bg-1 shdo-dk\">SnapFlash</footer>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { getUser } from \"../../utilities/users-service\";\nimport \"./App.css\";\nimport * as decksAPI from \"../../utilities/decks-api\";\nimport AuthPage from \"../AuthPage/AuthPage\";\nimport NewDeckPage from \"../NewDeckPage/NewDeckPage\";\nimport DecksListPage from \"../DecksListPage/DecksListPage\";\nimport CardsListViewPage from \"../CardsListViewPage/CardsListViewPage\";\nimport CardsFlipViewPage from \"../CardsFlipViewPage/CardsFlipViewPage\";\nimport SearchDecksPage from \"../SearchDecksPage/SearchDecksPage\";\nimport UpdateDeckPage from \"../UpdateDeckPage/UpdateDeckPage\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport Footer from \"../../components/Footer/Footer\";\n\nexport default function App() {\n  const [user, setUser] = useState(getUser());\n  const [decks, setDecks] = useState([]);\n\n  //get the decks from server and set the state\n  useEffect(\n    function () {\n      async function getDecks() {\n        if (user) {\n          const decksObj = await decksAPI.getAll();\n          setDecks(decksObj);\n        }\n      }\n      getDecks();\n    },\n    [user]\n  );\n\n  async function handleAddDeck(newDeckData, newCardsData) {\n    newDeckData.cards = newCardsData;\n    const newDeck = await decksAPI.createDeck(newDeckData);\n    setDecks([...decks, newDeck]);\n  }\n\n  async function handleUpdateDeck(updateDeckData, UpdateCardsData) {\n    updateDeckData.cards = UpdateCardsData;\n    const updateDeck = await decksAPI.updateDeck(updateDeckData);\n    let dupeDecks = [...decks];\n    dupeDecks = dupeDecks.filter((d) => d._id !== updateDeck._id);\n    setDecks([...dupeDecks, updateDeck]);\n  }\n\n  async function handleHideDeck(deck) {\n    await decksAPI.hideDeck(deck);\n\n    // const decksObj = await decksAPI.getAll();\n    const updateHide = decks.map((d, id) => {\n      if (d._id === deck._id) {\n        d.hidden = !d.hidden;\n      }\n      return d;\n    });\n    setDecks(updateHide);\n  }\n\n  async function handleDeleteDeck(deck) {\n    await decksAPI.deleteDeck(deck);\n    const decksObj = await decksAPI.getAll();\n    setDecks(decksObj);\n  }\n\n  return (\n    <main id=\"background\" className=\"App\">\n      {user ? (\n        <>\n          <NavBar user={user} setUser={setUser} />\n          <Switch>\n            <div className=\"container-main\">\n              <Route path=\"/new\">\n                <NewDeckPage handleAddDeck={handleAddDeck} />\n              </Route>\n              <Route path=\"/decks\">\n                <DecksListPage\n                  user={user}\n                  decks={decks}\n                  handleDeleteDeck={handleDeleteDeck}\n                  handleHideDeck={handleHideDeck}\n                />\n              </Route>\n              <Route path=\"/list\">\n                <CardsListViewPage />\n              </Route>\n              <Route path=\"/flip\">\n                <CardsFlipViewPage />\n              </Route>\n              <Route path=\"/edit\">\n                <UpdateDeckPage\n                  handleDeleteDeck={handleDeleteDeck}\n                  handleUpdateDeck={handleUpdateDeck}\n                />\n              </Route>\n              <Route path=\"/search\">\n                <SearchDecksPage user={user} />\n              </Route>\n              <Redirect to=\"/decks\" />\n            </div>\n          </Switch>\n          <Footer />\n        </>\n      ) : (\n        <AuthPage setUser={setUser} />\n      )}\n    </main>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}