{"version":3,"sources":["utilities/users-api.js","utilities/users-service.js","utilities/send-request.js","utilities/decks-api.js","components/SignUpForm/SignUpForm.jsx","components/LoginForm/LoginForm.jsx","pages/AuthPage/AuthPage.jsx","components/AddCard/AddCard.jsx","pages/NewDeckPage/NewDeckPage.jsx","components/Deck/Deck.jsx","components/DecksListContainer/DecksListContainer.jsx","pages/DecksListPage/DecksListPage.jsx","components/Card/Card.jsx","components/CardListContainer/CardListContainer.jsx","pages/CardsListViewPage/CardsListViewPage.jsx","components/CardFlip/CardFlip.jsx","components/FlipViewContainer/FlipViewContainer.jsx","pages/CardsFlipViewPage/CardsFlipViewPage.jsx","components/SearchDecksContainer/SearchDecksContainer.jsx","utilities/search-api.js","pages/SearchDecksPage/SearchDecksPage.jsx","components/NavBar/NavBar.jsx","components/UpdateCard/UpdateCard.jsx","pages/UpdateDeckPage/UpdateDeckPage.jsx","pages/App/App.jsx","index.js"],"names":["BASE_URL","signUp","userData","sendRequest","login","credentials","url","a","method","payload","options","headers","body","JSON","stringify","token","getToken","Authorization","fetch","res","ok","json","Error","usersAPI","localStorage","setItem","getUser","getItem","parse","atob","split","exp","Date","now","removeItem","user","console","log","getAll","createDeck","deckData","updateDeck","deck","_id","deleteDeck","SignUpForm","state","name","email","password","confirm","error","handleChange","evt","setState","target","value","handleSubmit","preventDefault","formData","props","setUser","disable","this","className","autoComplete","onSubmit","type","onChange","required","disabled","Component","LogIn","useState","setCredentials","setError","usersService","AuthPage","showLogin","setShowLogin","onClick","AddCard","card","cardKey","handleCardsInputChange","handleCardsDelete","handleChangeWithKey","id","htmlFor","word","definition","NewDeckPage","handleAddDeck","history","useHistory","description","setDeck","newCard","setNewCard","cards","setCards","wordInput","useRef","definitionInput","formRef","invalidForm","setInvalidForm","addingNewCard","setAddingNewCard","handleCardInputChange","handleDeckInputChange","idx","dupeCards","handleAddCard","newCardData","cardsArr","push","current","focus","key","splice","useEffect","hits","length","childNodes","forEach","n","localName","c","autocomplete","ref","map","onKeyDown","e","which","lastCard","Deck","handleDeleteDeck","currentUser","userName","to","pathname","DecksListContainer","decks","i","DecksListPage","Card","CardListContainer","CardsListViewPage","location","useLocation","CardFlip","currentCard","class","FlipViewContainer","setCurrentCard","HandleChangeCard","deckSize","startingCard","whereAmI","indexOf","innerHTML","CardsFlipViewPage","SearchDecksContainer","otherDecks","getAllOtherDecks","SearchDecksPage","setOtherDecks","searchAPI","decksObj","getOtherDecks","NavBar","exact","activeStyle","backgroundColor","UpdateCard","UpdateDeckPage","handleUpdateDeck","setUpdateDeck","defaultValue","App","setDecks","newDeckData","newCardsData","decksAPI","newDeck","updateDeckData","UpdateCardsData","getDecks","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.213dc352.chunk.js","sourcesContent":["import { getToken } from './users-service';\r\n\r\nconst BASE_URL = '/api/users';\r\n\r\nexport function signUp(userData) {\r\n  return sendRequest(BASE_URL, 'POST', userData);\r\n}\r\n\r\nexport function login(credentials) {\r\n  return sendRequest(`${BASE_URL}/login`, 'POST', credentials);\r\n}\r\n\r\n// Again, this is for testing purposes only, you don't need it\r\nexport function checkToken() {\r\n  return sendRequest(`${BASE_URL}/check-token`);\r\n}\r\n\r\n/*--- Helper Functions ---*/\r\n\r\nasync function sendRequest(url, method = 'GET', payload = null) {\r\n  // Fetch takes an optional options object as the 2nd argument\r\n  // used to include a data payload, set headers, etc. \r\n  const options = { method };\r\n  if (payload) {\r\n    options.headers = { 'Content-Type': 'application/json' };\r\n    options.body = JSON.stringify(payload);\r\n  }\r\n  // Add the token\r\n  const token = getToken();\r\n  if (token) {\r\n    // Ensure the headers object exists\r\n    options.headers = options.headers || {};\r\n    options.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  const res = await fetch(url, options);\r\n  // res.ok will be false if the status code set to 4xx in the controller action\r\n  if (res.ok) return res.json();\r\n  throw new Error('Bad Request');\r\n}","import * as usersAPI from './users-api';\r\n\r\nexport async function signUp(userData) {\r\n  try {\r\n    const token = await usersAPI.signUp(userData);\r\n    // Persist the token\r\n    localStorage.setItem('token', token);\r\n    return getUser();\r\n  } catch {\r\n    throw new Error('Invalid Sign Up');\r\n  }\r\n}\r\nexport async function login(credentials) {\r\n  try {\r\n    const token = await usersAPI.login(credentials);\r\n    // Persist the token\r\n    localStorage.setItem('token', token);\r\n    return getUser();\r\n  } catch {\r\n    throw new Error('Invalid Login');\r\n  }\r\n}\r\n\r\nexport function logOut() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport function getToken() {\r\n  // getItem returns null if there's no string\r\n  const token = localStorage.getItem('token');\r\n  if (!token) return null;\r\n  // Check if expired, remove if it is\r\n  const payload = JSON.parse(atob(token.split('.')[1]));\r\n  // A JWT's exp is expressed in seconds, not milliseconds, so convert\r\n  if (payload.exp < Date.now() / 1000) {\r\n    localStorage.removeItem('token');\r\n    return null;\r\n  }\r\n  return token;\r\n}\r\n\r\nexport function getUser() {\r\n  const token = getToken();\r\n  // If there's a token, return the user in the payload, otherwise return null\r\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\r\n}\r\n","import { getToken } from './users-service'\r\n\r\nexport default async function sendRequest(url, method = 'GET', payload = null) {\r\n    // Fetch takes an optional options object as the 2nd argument\r\n    // used to include a data payload, set headers, etc. \r\n    const options = { method };\r\n    if (payload) {\r\n      options.headers = { 'Content-Type': 'application/json' };\r\n      options.body = JSON.stringify(payload);\r\n    }\r\n    // Add a token\r\n    const token = getToken();\r\n    if (token) {\r\n      // Ensures that the headers object exists\r\n      options.headers = options.headers || {};\r\n      options.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    const res = await fetch(url, options);\r\n    console.log(res)\r\n    // res.ok will be false if the status code set to 4xx in the controller action\r\n    if (res.ok) return res.json();\r\n    throw new Error('Bad Request');\r\n  }","import sendRequest from './send-request';\r\n\r\nconst BASE_URL = 'api/decks';\r\n\r\n// get all decks from mongoose documents\r\nexport function getAll() {\r\n    return sendRequest(BASE_URL);\r\n}\r\n\r\nexport function addCards(deck, cardsData) {\r\n    return sendRequest(`${BASE_URL}/${deck._id}/addCards`, 'PUT', cardsData)\r\n}\r\n\r\n// send deckData to mongoose to create a new deck document\r\nexport function createDeck(deckData) {\r\n    return sendRequest(BASE_URL, \"POST\", deckData);\r\n}\r\n\r\nexport function updateDeck(deck) {\r\n    return sendRequest(`${BASE_URL}/${deck._id}`, \"PUT\", deck);\r\n}\r\n\r\nexport function showDeck(deck) {\r\n    return sendRequest(`${BASE_URL}/${deck._id}`, \"GET\", deck);\r\n}\r\n\r\nexport function deleteDeck(deck) {\r\n    return sendRequest(`${BASE_URL}/${deck._id}`, \"DELETE\");\r\n}\r\n","import { Component } from 'react';\r\nimport { signUp } from '../../utilities/users-service';\r\n\r\nexport default class SignUpForm extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirm: '',\r\n    error: ''\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value,\r\n      error: ''\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    try {\r\n      const formData = {...this.state};\r\n      delete formData.error;\r\n      delete formData.confirm;\r\n      const user = await signUp(formData);\r\n      this.props.setUser(user);\r\n    } catch {\r\n      // An error occurred\r\n      this.setState({ error: 'Sign Up Failed - Try Again'});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const disable = this.state.password !== this.state.confirm;\r\n    return (\r\n      <div>\r\n        <div className=\"form-container\">\r\n          <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n            <label>Name</label>\r\n            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} required />\r\n            <label>Email</label>\r\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\r\n            <label>Confirm</label>\r\n            <input type=\"password\" name=\"confirm\" value={this.state.confirm} onChange={this.handleChange} required />\r\n            <button type=\"submit\" disabled={disable}>SIGN UP</button>\r\n          </form>\r\n        </div>\r\n        <p className=\"error-message\">&nbsp;{this.state.error}</p>\r\n      </div>\r\n    );\r\n  }\r\n}","import { useState } from 'react';\r\nimport * as usersService from '../../utilities/users-service';\r\n\r\nexport default function LogIn({ setUser }) {\r\n  const [credentials, setCredentials] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  function handleChange(evt) {\r\n    setCredentials({ ...credentials, [evt.target.name]: evt.target.value });\r\n    setError('');\r\n  }\r\n\r\n  async function handleSubmit(evt) {\r\n    // Prevent form from being submitted to the server\r\n    evt.preventDefault();\r\n    try {\r\n      // The promise returned by the signUp service method \r\n      // will resolve to the user object included in the\r\n      // payload of the JSON Web Token (JWT)\r\n      const user = await usersService.login(credentials);\r\n      setUser(user);\r\n    } catch {\r\n      setError('Log In Failed - Try Again');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-container\" onSubmit={handleSubmit}>\r\n        <form autoComplete=\"off\" >\r\n          <label>Email</label>\r\n          <input type=\"text\" name=\"email\" value={credentials.email} onChange={handleChange} required />\r\n          <label>Password</label>\r\n          <input type=\"password\" name=\"password\" value={credentials.password} onChange={handleChange} required />\r\n          <button type=\"submit\">LOG IN</button>\r\n        </form>\r\n      </div>\r\n      <p className=\"error-message\">&nbsp;{error}</p>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\r\nimport LoginForm from '../../components/LoginForm/LoginForm';\r\n\r\nexport default function AuthPage({ setUser }) {\r\n  const [showLogin, setShowLogin] = useState(true);\r\n\r\n  return (\r\n    <main>\r\n      <h1>AuthPage</h1>\r\n      {showLogin ?\r\n        <LoginForm setUser={setUser} />\r\n        :\r\n        <SignUpForm setUser={setUser} />\r\n      }\r\n      <button onClick={() => setShowLogin(!showLogin)}>{showLogin ? 'SIGN UP' : 'LOG IN'}</button>\r\n    </main>\r\n  );\r\n}","import { useState, useEffect, useRef } from 'react';\r\nimport Component from 'react'\r\n\r\nexport default function AddCard({card, cardKey, handleCardsInputChange, handleCardsDelete}) {\r\n\r\n    function handleChangeWithKey(evt) {\r\n        console.log({[evt.target.name]:evt.target.value})\r\n        handleCardsInputChange(evt,cardKey);\r\n    }\r\n\r\n    function handleDeleteCardWithKey(evt) {\r\n        handleCardsDelete(cardKey);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id={cardKey}>  \r\n                <label htmlFor=\"\">Word:</label>\r\n                <textarea type=\"text\" onChange={handleChangeWithKey} name=\"word\" value={card.word}/>\r\n                <label htmlFor=\"\">Definition:</label>\r\n                <textarea type=\"text\" onChange={handleChangeWithKey} name=\"definition\" value={card.definition}/>\r\n                <p onClick={handleDeleteCardWithKey}>DELETE</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { waitForElementToBeRemoved } from '@testing-library/react';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport AddCard from '../../components/AddCard/AddCard'\r\n\r\nexport default function NewDeckPage({ handleAddDeck }) {\r\n  // useRef to check validity (all cards have definitions)\r\n  // const deck = useLocation().state.deck;\r\n  \r\n  const history = useHistory()\r\n  const [deck,setDeck] = useState({\r\n    name:'',\r\n    description:''\r\n  });\r\n  const [newCard,setNewCard] = useState({\r\n    word:'',\r\n    definition:''\r\n  });\r\n  const [cards,setCards] = useState([]);\r\n\r\n  const wordInput = useRef();\r\n  const definitionInput = useRef();\r\n  const formRef = useRef();\r\n  const [invalidForm, setInvalidForm] = useState(false);\r\n  const [addingNewCard,setAddingNewCard] = useState(true)\r\n  const [changeInChild,setChangeInChild] = useState(false)\r\n\r\n\r\n  //Checks to see that all fields have a value, otherwise the form is invalid.\r\n  useEffect(() => {\r\n    // console.log('Am I Running?')\r\n    let hits = 0;\r\n    let length = 0;\r\n    // console.log(formRef)\r\n    formRef.current.childNodes.forEach((n) => {\r\n      // console.log(n)\r\n      if(n.localName === 'textarea'){\r\n        length += 1\r\n        if(n.value) {\r\n          hits += 1;\r\n        }\r\n      }\r\n      if(n.localName === 'div') {\r\n        n.childNodes.forEach((c) => {\r\n          if(c.localName === 'textarea'){\r\n            length += 1\r\n            if(c.value) {\r\n              hits += 1;\r\n            }\r\n        }\r\n        })\r\n      }\r\n    })\r\n    // console.log(\"I say the form is: \", invalidForm, ' hits=',hits, ' length=', length )\r\n    if (hits === length) {\r\n      setInvalidForm(false)\r\n    } else {\r\n      setInvalidForm(true)\r\n    }\r\n  }, [cards, deck, newCard]);\r\n  \r\n\r\n  // useEffect(() => {\r\n  //   focusFirst.current.focus()\r\n  // },[])\r\n\r\n  function handleCardInputChange(evt) {\r\n    // console.log({[evt.target.name]:evt.target.value})\r\n    setNewCard({\r\n      ...newCard,\r\n      [evt.target.name]:evt.target.value\r\n    })\r\n  }\r\n\r\n  function handleDeckInputChange(evt) {\r\n    console.log({[evt.target.name]:evt.target.value})\r\n    setDeck({\r\n      ...deck,\r\n      [evt.target.name]:evt.target.value\r\n    })\r\n  }\r\n\r\n  function handleCardsInputChange(evt,idx) {\r\n    const dupeCards = [...cards]\r\n    dupeCards[idx][evt.target.name] = evt.target.value;\r\n    setCards(dupeCards);\r\n  }\r\n\r\n  async function handleAddCard(newCardData) {\r\n    await setAddingNewCard(true)\r\n    const cardsArr = [...cards];\r\n    cardsArr.push(newCardData);\r\n    setCards(cardsArr);\r\n    setNewCard({\r\n      word:'',\r\n      definition:''\r\n    });\r\n    wordInput.current.focus();\r\n    wordInput.current.value = '';\r\n    definitionInput.current.value = '';\r\n    setInvalidForm(true);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const cardsArr = [...cards];\r\n    cardsArr.push(newCard);\r\n    handleAddDeck(deck,cardsArr);\r\n    history.push('/')\r\n  }\r\n\r\n  function checkIfTab(e) {\r\n    if(e.which === 9) {\r\n    e.preventDefault()\r\n    handleAddCard(newCard)\r\n    }\r\n  }\r\n\r\n  function handleCardsDelete(key) {\r\n    console.log('Hello?')\r\n    const dupeCards = [...cards]\r\n    dupeCards.splice(key,1);\r\n    console.log(dupeCards)\r\n    setCards(dupeCards);\r\n}\r\n\r\nfunction handleDeleteCard() {\r\n  const dupeCards = [...cards];\r\n  let lastCard = dupeCards.splice(-1,1);\r\n\r\n  wordInput.current.value = lastCard[0].word\r\n  definitionInput.current.value = lastCard[0].definition\r\n  setNewCard(lastCard[0]);\r\n  setCards(dupeCards);\r\n}\r\n\r\n  // -----Delete contents of inputs when deck is pressed\r\n  // useEffect(() =>{\r\n  //   setDeck({\r\n  //     name:'',\r\n  //     description:''\r\n  //   });\r\n  //   setNewCard({\r\n  //     word:'',\r\n  //     definition:''\r\n  //   });\r\n  //   setCards([]);\r\n  //   console.log(deck, 'and', cards)\r\n  //   setDeckBeGone(false);\r\n  // },[deckBeGone])\r\n  \r\n  // function handleDeckBeGone() {\r\n  //   setDeckBeGone(true)\r\n  // }\r\n  // console.log(invalidForm)\r\n  return (\r\n    <>\r\n      <h1>Make a New Deck Here</h1>\r\n      <form autocomplete=\"off\" ref={formRef} onSubmit={handleSubmit}>\r\n        <label>Name:</label>\r\n        <textarea name=\"name\"  type=\"text\" onChange={handleDeckInputChange}/>\r\n        <label>Description:</label>\r\n        <textarea name=\"description\" type=\"text\" onChange={handleDeckInputChange}/>\r\n        {cards.map((c,idx) => \r\n          <AddCard \r\n            card={c} \r\n            handleCardsInputChange={handleCardsInputChange} \r\n            cardKey={idx}\r\n            handleCardsDelete={handleCardsDelete}\r\n            />)}\r\n        { addingNewCard ?\r\n          <>\r\n            <label>Word:</label>\r\n            <textarea name=\"word\" type=\"text\" ref={wordInput} onChange={handleCardInputChange}/>\r\n            <label>Definition:</label>\r\n            <textarea name=\"definition\" onKeyDown={checkIfTab} type=\"text\" ref={definitionInput} onChange={handleCardInputChange}/>\r\n            {cards.length===0?\r\n            <>\r\n            </> \r\n            :\r\n            <p onClick={handleDeleteCard}>DELETE</p>\r\n            }\r\n          </>\r\n          :\r\n          <>\r\n          </>\r\n        }\r\n        <button disabled={invalidForm}>submit</button>\r\n      </form>\r\n      {/* <button onClick={handleDeckBeGone}>Delete Deck!</button> */}\r\n      <button onClick={() => handleAddCard(newCard)}>Add Card</button>\r\n    </>\r\n  )\r\n}","import { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Deck({ deck, handleDeleteDeck, currentUser }) {\r\n\r\n    function deleteDeck(evt) {\r\n        handleDeleteDeck(deck)\r\n    }\r\n\r\n    console.log('CURRNET', currentUser)\r\n\r\n    console.log('deckuser ', deck)\r\n    if(currentUser._id === deck.user) {\r\n        console.log('THESE ARE MINE')\r\n    }\r\n    // console.log('HI IM ON THE DECK PAGE', deck )\r\n    return (\r\n        <>\r\n                <div>CreatedBy: {deck.userName}</div>\r\n                <div>{deck.name}</div>\r\n                <div>{deck.description}</div>\r\n                {currentUser._id === deck.user ?\r\n                <>\r\n                    <Link to={{pathname: `/edit`, state:{deck}}}>UPDATE</Link>\r\n                    <Link to={{pathname: '/list', state:{deck}}}>List View</Link>\r\n                    <Link to={{pathname: '/flip', state:{deck}}}>Flip View</Link>\r\n                    <button onClick={deleteDeck}>DELETE</button>  \r\n                </>\r\n                :\r\n                <>\r\n\r\n                    <Link to={{pathname: '/list', state:{deck}}}>List View</Link>\r\n                    <Link to={{pathname: '/flip', state:{deck}}}>Flip View</Link>\r\n\r\n                </>                \r\n                }\r\n\r\n                \r\n                {/* Link to CardsFlipViewPage */}\r\n                {/* Link to CardsListViewPage */}\r\n        </>\r\n    );\r\n}","import {useState} from 'react';\r\nimport Deck from '../Deck/Deck'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function DecksListContainer({ decks, handleDeleteDeck, user }) {\r\n\r\n\r\n\r\n  console.log('before map userrrrrrrrr', user)\r\n\r\n    const deck = decks.map((i,idx) => {\r\n        console.log('In the map function' , i)\r\n        return <Deck key={i._id} deck={i} handleDeleteDeck={handleDeleteDeck} currentUser={user} />\r\n      })\r\n    \r\n      console.log('returned from map' , deck)\r\n\r\n  return (\r\n    <>\r\n      <h1>DecksContainer</h1>\r\n      {deck}\r\n    </>\r\n  )\r\n}","import { STATES } from 'mongoose';\r\nimport {useEffect, useState} from 'react';\r\nimport * as decksAPI from '../../utilities/decks-api'\r\nimport DecksListContainer from '../../components/DecksListContainer/DecksListContainer'\r\n\r\nexport default function DecksListPage({ decks, handleDeleteDeck, user }) {\r\n  \r\n  // const [decks ,setDecks] = useState();\r\n\r\n  // console.log('awfeipnwaeifunwaef', user)\r\n\r\n  // useEffect( function() {\r\n  //   async function getDecks() {\r\n  //   const decksObj = await decksAPI.getAll();\r\n  //   setDecks(decksObj)\r\n  //   }\r\n  //   getDecks();\r\n  // },[])\r\n\r\n  return (\r\n    <>\r\n      <h1>My Decks</h1>\r\n      <DecksListContainer decks={decks} handleDeleteDeck={handleDeleteDeck} user={user} />\r\n    </>\r\n  )\r\n}","import { useState } from 'react';\r\nimport './Card.css'\r\n\r\nexport default function Card({card}) {\r\n    \r\n    return (\r\n        <>\r\n        <div>\r\n            {card.word}\r\n        </div>\r\n        <div>\r\n            {card.definition}\r\n        </div>\r\n        </>\r\n    );\r\n}","import { useState, } from 'react';\r\nimport Card from '../Card/Card'\r\n\r\nexport default function CardListContainer({deck}) {\r\n\r\n\r\n    let card = deck.cards.map((c) => {\r\n        return <Card card={c}/>\r\n    })\r\n\r\n    console.log(card)\r\n\r\n    return (\r\n        <>\r\n            {card}\r\n        </>\r\n    );\r\n}","import { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport CardListContainer from '../../components/CardListContainer/CardListContainer';\r\n\r\nexport default function CardsListViewPage() {\r\n  \r\n  const location = useLocation() \r\n\r\n  const {state : {deck}} = useLocation()\r\n\r\n  // console.log(location)\r\n  // console.log(deck)\r\n  // const thisDeck = useLocation().state.deck\r\n  // console.log(deck)\r\n  return (\r\n    <>\r\n    <h1>View Card List Page</h1>\r\n    {deck.name}: \r\n    {deck.description}\r\n    <CardListContainer location={location} deck={deck} />\r\n    </>\r\n  )\r\n}","import { useState } from 'react';\r\nimport './CardFlip.css'\r\n\r\nexport default function CardFlip({currentCard}) {\r\n    \r\n    return (\r\n        <div className=\"flex-ctr-ctr\">\r\n            <div class=\"flip-card\">\r\n                <div class=\"flip-card-inner\">\r\n                    <div class=\"flip-card-front\">\r\n                        <div className=\"card-index\">1</div>\r\n                        <div className=\"flex-ctr-ctr card-content\">{currentCard.word}</div>\r\n                    </div>\r\n                    <div class=\"flip-card-back\">\r\n                        <div className=\"flex-ctr-ctr card-content\">{currentCard.definition}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useState } from 'react';\r\n\r\nimport CardFlip from '../../components/CardFlip/CardFlip';\r\n\r\nexport default function FlipViewContainer({ deck }) {\r\n\r\n    const [currentCard, setCurrentCard] = useState(deck.cards[0])\r\n\r\n    function HandleChangeCard(evt) {\r\n        let deckSize = deck.cards.length;\r\n        let startingCard = currentCard;\r\n        let whereAmI = deck.cards.indexOf(startingCard);\r\n\r\n        console.log(startingCard);\r\n        if(evt.target.innerHTML === 'Previous') {\r\n            console.log('boop left');\r\n            whereAmI -= 1;\r\n            if(whereAmI < 0) {\r\n                console.log('GotoEndOFDeck');\r\n                whereAmI = deckSize-1;\r\n            }\r\n        }\r\n        if(evt.target.innerHTML === 'Next') {\r\n            console.log('boop Right');\r\n            whereAmI += 1;\r\n            if(deck.cards[deckSize-1]._id === startingCard._id) {\r\n                console.log('GotoStartOFDeck');\r\n                whereAmI = 0;\r\n            }\r\n        }\r\n        console.log(whereAmI)\r\n        setCurrentCard(deck.cards[whereAmI])\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <div>\r\n        <CardFlip currentCard={currentCard} />\r\n    </div>\r\n    <span>\r\n        <button onClick={HandleChangeCard}>Previous</button>\r\n        <button onClick={HandleChangeCard}>Next</button>\r\n    </span>\r\n    </>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Card from '../../components/Card/Card';\r\nimport FlipViewContainer from '../../components/FlipViewContainer/FlipViewContainer';\r\n\r\nexport default function CardsFlipViewPage() {\r\n  \r\n\r\n  const {state : {deck}} = useLocation()\r\n\r\n  console.log(deck)\r\n\r\n  return (\r\n    <>\r\n      <h1>Flippy Time</h1>\r\n      <h2>Created By: {deck.user.name}</h2>\r\n      <h2>Name Of Deck: {deck.name}</h2>\r\n      <h2>Description: {deck.description}</h2>\r\n      <FlipViewContainer deck={deck}/>\r\n    </>\r\n  )\r\n}","// import {useState} from 'react';\r\nimport Deck from '../Deck/Deck'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport default function SearchDecksContainer({ otherDecks, user }) {\r\n\r\n    const deck = otherDecks.map((i,idx) => {\r\n        console.log('In the map function' , i)\r\n        return <Deck key={i._id} deck={i} currentUser={user}/>\r\n    })\r\n    \r\n    console.log('returned from map' , deck)\r\n\r\n    return (\r\n        <>\r\n            <h1>DecksContainer</h1>\r\n            {deck}\r\n        </>\r\n    )\r\n}","import sendRequest from './send-request';\r\n\r\nconst BASE_URL = 'api/search';\r\n\r\n// get all decks from mongoose documents\r\nexport function getAllOtherDecks() {\r\n    return sendRequest(BASE_URL);\r\n}","import {useEffect, useState} from 'react';\r\nimport SearchDecksContainer from '../../components/SearchDecksContainer/SearchDecksContainer'\r\nimport * as searchAPI from '../../utilities/search-api'\r\n\r\n\r\nexport default function SearchDecksPage({ user }) {\r\n  \r\n  const [search,setSearch] = useState();\r\n  const [otherDecks, setOtherDecks] = useState([])\r\n\r\n  useEffect( function() {\r\n      async function getOtherDecks() {\r\n      const decksObj = await searchAPI.getAllOtherDecks();\r\n      setOtherDecks(decksObj)\r\n      }\r\n      getOtherDecks();\r\n      // console.log(otherDecks)\r\n    },[])\r\n\r\n  return (\r\n    <>\r\n      <h1>Other Peoples Decks</h1>\r\n      <SearchDecksContainer otherDecks={otherDecks} user={user}/>\r\n    </>\r\n  )\r\n}","import { Link, NavLink } from 'react-router-dom';\r\nimport * as userService from '../../utilities/users-service';\r\n\r\nexport default function NavBar({ user, setUser }) {\r\n\r\n  function handleLogOut() {\r\n    userService.logOut();\r\n    setUser(null);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <NavLink exact activeStyle={{backgroundColor: 'yellow'}} to=\"/\">MyDecks</NavLink>\r\n      &nbsp; | &nbsp;\r\n      <NavLink exact activeStyle={{backgroundColor: 'yellow'}} to=\"/new\">NewDeck</NavLink>\r\n      &nbsp; | &nbsp;\r\n      <NavLink exact activeStyle={{backgroundColor: 'yellow'}} to=\"/search\">Search Other Decks</NavLink>\r\n      &nbsp; | &nbsp;\r\n      <span>Welcome, {user.name}</span>\r\n      &nbsp;&nbsp;<Link to=\"\" onClick={handleLogOut}>Log Out</Link>\r\n    </nav>\r\n  );\r\n}","import { useState, useEffect, useRef } from 'react';\r\nimport Component from 'react'\r\n\r\nexport default function UpdateCard({card, cardKey, handleCardsInputChange, handleCardsDelete}) {\r\n\r\n    function handleChangeWithKey(evt) {\r\n        console.log({[evt.target.name]:evt.target.value})\r\n        handleCardsInputChange(evt,cardKey);\r\n    }\r\n\r\n    function handleDeleteCardWithKey(evt) {\r\n        console.log('Poppa?')\r\n        handleCardsDelete(cardKey);\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <div id={cardKey}>  \r\n                <label htmlFor=\"\">Word:</label>\r\n                <textarea type=\"text\" onChange={handleChangeWithKey} name=\"word\" value={card.word}/>\r\n                <label htmlFor=\"\">Definition:</label>\r\n                <textarea type=\"text\" onChange={handleChangeWithKey} name=\"definition\" value={card.definition}/>\r\n                <p onClick={handleDeleteCardWithKey}>DELETE</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState, useRef } from 'react';\r\nimport { useLocation, useHistory} from 'react-router-dom'\r\nimport Card from '../../components/AddCard/AddCard'\r\nimport UpdateCard from '../../components/UpdateCard/UpdateCard'\r\n\r\nexport default function UpdateDeckPage({ handleUpdateDeck }) {\r\n  \r\n  let history = useHistory();\r\n\r\n  const [updateDeck,setUpdateDeck] = useState({\r\n    name:'',\r\n    description:''\r\n  });\r\n  const [newCard,setNewCard] = useState({\r\n    word:'',\r\n    definition:''\r\n  });\r\n  const [cards,setCards] = useState([]);\r\n  const {state : {deck}} = useLocation()\r\n  const wordInput = useRef();\r\n  const definitionInput = useRef();\r\n  const formRef = useRef();\r\n  const [invalidForm, setInvalidForm] = useState(false);\r\n  const [addingNewCard, setAddingNewCard] = useState(true)\r\n  \r\n  console.log('HELLO I AM ON THE UPDATE PAGE', deck)\r\n\r\n  //Checks to see that all fields have a value, otherwise the form is invalid.\r\n  useEffect(() => {\r\n    // console.log('Am I Running?')\r\n    let hits = 0;\r\n    let length = 0;\r\n    // console.log(formRef)\r\n    formRef.current.childNodes.forEach((n) => {\r\n      // console.log(n)\r\n      if(n.localName === 'textarea'){\r\n        length += 1\r\n        if(n.value) {\r\n          hits += 1;\r\n        }\r\n      }\r\n      if(n.localName === 'div') {\r\n        n.childNodes.forEach((c) => {\r\n          if(c.localName === 'textarea'){\r\n            length += 1\r\n            if(c.value) {\r\n              hits += 1;\r\n            }\r\n        }\r\n        })\r\n      }\r\n    })\r\n    // console.log(\"I say the form is: \", invalidForm, ' hits=',hits, ' length=', length )\r\n    if (hits === length) {\r\n      setInvalidForm(false)\r\n    } else {\r\n      setInvalidForm(true)\r\n    }\r\n  }, [cards, updateDeck, newCard]);\r\n\r\n  // This unpacks the deck to set initial values\r\n  useEffect(() => {\r\n    setUpdateDeck({\r\n      name:deck.name,\r\n      description:deck.description\r\n    })\r\n    const cards = [...deck.cards]\r\n    let dupeCards = [...cards]\r\n    let lastCard = dupeCards.splice(-1,1)\r\n    wordInput.current.value = lastCard[0].word\r\n    definitionInput.current.value = lastCard[0].definition\r\n    setCards(dupeCards);\r\n    setNewCard(lastCard[0])\r\n  },[])\r\n\r\n  //handles the input name of the new deck\r\n  function handleDeckInputChange(evt) {\r\n    // console.log({[evt.target.name]:evt.target.value})\r\n    setUpdateDeck({\r\n      ...deck,\r\n      [evt.target.name]:evt.target.value\r\n    })\r\n  }\r\n\r\n  //handles the input change of the newest card\r\n  function handleCardInputChange(evt) {\r\n    // console.log({[evt.target.name]:evt.target.value})\r\n    setNewCard({\r\n      ...newCard,\r\n      [evt.target.name]:evt.target.value\r\n    })\r\n  }\r\n\r\n  //handles the input change of the rest of the cards\r\n  function handleCardsInputChange(evt,idx) {\r\n    const dupeCards = [...cards]\r\n    dupeCards[idx][evt.target.name] = evt.target.value;\r\n    setCards(dupeCards);\r\n\r\n  }\r\n\r\n  //adds new card to the deck of cards, resets new card\r\n  async function handleAddCard(newCardData) {\r\n    await setAddingNewCard(true)\r\n    const cardsArr = [...cards];\r\n    cardsArr.push(newCardData);\r\n    setCards(cardsArr);\r\n    setNewCard({\r\n      word:'',\r\n      definition:''\r\n    });\r\n    wordInput.current.focus();\r\n    wordInput.current.value = '';\r\n    definitionInput.current.value = '';\r\n    setInvalidForm(true)\r\n  }\r\n\r\n  function handleCardsDelete(key) {\r\n    const dupeCards = [...cards]\r\n    dupeCards.splice(key,1);\r\n    setCards(dupeCards);\r\n}\r\n\r\nfunction handleDeleteCard() {\r\n  const dupeCards = [...cards];\r\n  let lastCard = dupeCards.splice(-1,1);\r\n  wordInput.current.value = lastCard[0].word\r\n  definitionInput.current.value = lastCard[0].definition\r\n  setNewCard(lastCard[0]);\r\n  setCards(dupeCards);\r\n}\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const cardsArr = [...cards];\r\n    if(newCard.definition === '' && newCard.name === '') {\r\n      // console.log('state is empty')\r\n    }\r\n    cardsArr.push(newCard);\r\n    handleUpdateDeck(deck,cardsArr,deck._id);\r\n  }\r\n\r\n  function checkIfTab(e) {\r\n    if(e.which === 9) {\r\n    e.preventDefault()\r\n    handleAddCard(newCard)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Make a New Deck Here</h1>\r\n      <form autocomplete=\"off\" ref={formRef} onSubmit={handleSubmit}>\r\n        <label>Name:</label>\r\n        <textarea name=\"name\"  type=\"text\" defaultValue={updateDeck.name} onChange={handleDeckInputChange}/>\r\n        <label>Description:</label>\r\n        <textarea name=\"description\" type=\"text\" defaultValue={updateDeck.description} onChange={handleDeckInputChange}/>\r\n        {cards.map((c,idx) => \r\n          <UpdateCard \r\n            card={c} \r\n            handleCardsInputChange={handleCardsInputChange} \r\n            cardKey={idx}\r\n            handleCardsDelete={handleCardsDelete}\r\n            />)}\r\n        { addingNewCard ?\r\n          <>\r\n            {/* {console.log('after I Hit add card')} */}\r\n            <label>Word:</label>\r\n            <textarea name=\"word\" type=\"text\" ref={wordInput} onChange={handleCardInputChange}/>\r\n            <label>Definition:</label>\r\n            <textarea name=\"definition\" onKeyDown={checkIfTab} type=\"text\" ref={definitionInput} onChange={handleCardInputChange}/>\r\n            {cards.length===0 ?\r\n            <>\r\n            </> \r\n            :\r\n            <p onClick={handleDeleteCard}>DELETE</p>\r\n            }\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n        <button disabled={invalidForm}>submit</button>\r\n      </form>\r\n      {/* <button onClick={handleDeckBeGone}>Delete Deck!</button> */}\r\n      <button onClick={() => handleAddCard(newCard)}>Add Card</button>\r\n    </>\r\n  )\r\n}","import { useState, useEffect } from 'react';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport { getUser } from '../../utilities/users-service';\r\nimport './App.css';\r\nimport * as decksAPI from '../../utilities/decks-api'\r\nimport AuthPage from '../AuthPage/AuthPage';\r\nimport NewDeckPage from '../NewDeckPage/NewDeckPage';\r\nimport DecksListPage from '../DecksListPage/DecksListPage';\r\nimport CardsListViewPage from '../CardsListViewPage/CardsListViewPage';\r\nimport CardsFlipViewPage from '../CardsFlipViewPage/CardsFlipViewPage';\r\nimport SearchDecksPage from '../SearchDecksPage/SearchDecksPage';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport UpdateDeckPage from '../UpdateDeckPage/UpdateDeckPage';\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(getUser());\r\n  const [decks, setDecks] = useState([]);\r\n\r\n  //get the decks from server and set the state\r\n  useEffect( function() {\r\n    async function getDecks() {\r\n      if(user) {\r\n        const decksObj = await decksAPI.getAll();\r\n        setDecks(decksObj)\r\n      }\r\n    }\r\n    getDecks()\r\n  },[user])\r\n\r\n    async function handleAddDeck(newDeckData, newCardsData) {\r\n      newDeckData.cards = newCardsData;\r\n      const newDeck = await decksAPI.createDeck(newDeckData);\r\n      setDecks([\r\n        ...decks,\r\n        newDeck\r\n      ])\r\n  }\r\n\r\n    async function handleUpdateDeck(updateDeckData, UpdateCardsData) {\r\n      updateDeckData.cards = UpdateCardsData;\r\n      const updateDeck = await decksAPI.updateDeck(updateDeckData);\r\n      \r\n    }\r\n\r\n    async function handleDeleteDeck(deck){\r\n      await decksAPI.deleteDeck(deck);\r\n      const decksObj = await decksAPI.getAll();\r\n      setDecks(decksObj)\r\n    }\r\n\r\n  return (\r\n    <main className=\"App\">\r\n      { user ?\r\n          <>\r\n            <NavBar user={user} setUser={setUser} />\r\n            <Switch>\r\n              <Route path=\"/new\">\r\n                <NewDeckPage handleAddDeck={handleAddDeck}/>\r\n              </Route>\r\n              <Route path=\"/decks\">\r\n                <DecksListPage user={user} decks={decks} handleDeleteDeck={handleDeleteDeck} />\r\n              </Route>\r\n              <Route path=\"/list\">\r\n                <CardsListViewPage />\r\n              </Route>\r\n              <Route path=\"/flip\">\r\n                <CardsFlipViewPage />\r\n              </Route>\r\n              <Route path=\"/edit\">\r\n                <UpdateDeckPage handleDeleteDeck={handleDeleteDeck} handleUpdateDeck={handleUpdateDeck}/> //add request params\r\n              </Route>\r\n              <Route path=\"/search\">\r\n                <SearchDecksPage user={user} />\r\n              </Route>\r\n              <Redirect to=\"/decks\" />\r\n            </Switch>\r\n          </>\r\n        :\r\n          <AuthPage setUser={setUser}/>\r\n      }\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './pages/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router><App /></Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}